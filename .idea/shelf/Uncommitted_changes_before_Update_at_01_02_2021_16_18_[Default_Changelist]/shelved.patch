Index: app/src/main/java/com/example/walktoshop/Seller/ManageDiscount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.walktoshop.Seller;\r\n\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.walktoshop.NetworkController.NetworkController;\r\nimport com.example.walktoshop.R;\r\nimport com.example.walktoshop.User.UserMapView;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class ManageDiscount extends AppCompatActivity {\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private String businessUID=null;\r\n    private EditText description;\r\n    private EditText quantity;\r\n    private TextView expiringDate;\r\n    private Button add;\r\n    private ImageButton addDate;\r\n    private Calendar cal;\r\n    private String dateEditText;\r\n    private String[] separetedDate;\r\n    private boolean fromEditText;\r\n    int date;\r\n    long expiringDateInMillis;\r\n    String stringedDescription;\r\n    String todayInMills;\r\n    String stringedQuantity;\r\n\r\n    //DatePickerDialog.OnDateSetListener listener;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_managediscount);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n        getSupportActionBar().setHomeButtonEnabled(true);\r\n        Intent intent=getIntent();\r\n        if(intent.hasExtra(\"businessUID\")){\r\n            this.businessUID=intent.getStringExtra(\"businessUID\");\r\n        }\r\n        //inizializzazione variabli\r\n        addDate=(ImageButton)findViewById(R.id.addDate);\r\n        expiringDate=(TextView) findViewById(R.id.expiringDate);\r\n        description=(EditText)findViewById(R.id.description);\r\n        quantity=(EditText)findViewById(R.id.disocuntsQuantity);\r\n        add=(Button)findViewById(R.id.add);\r\n        //setting date picker\r\n        cal=Calendar.getInstance();\r\n        this.todayInMills=getTodayInMills();\r\n        //\r\n        addDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //metodo set datepicker\r\n                date=cal.get(Calendar.DATE);\r\n                int month=cal.get(Calendar.MONTH);\r\n                Log.d(\"month\", String.valueOf(month));\r\n                int year=cal.get(Calendar.YEAR);\r\n                expiringDate.setEnabled(false);\r\n                if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {\r\n                    fromEditText = false;\r\n                    DatePickerDialog datePickerDialog=new DatePickerDialog(ManageDiscount.this, android.R.style.Theme_DeviceDefault_Dialog, new DatePickerDialog.OnDateSetListener() {\r\n                        @Override\r\n                        public void onDateSet(DatePicker datePicker, int year, int month, int date) {\r\n                            month = month + 1;\r\n                            String dateFormat = null;\r\n                            if(month < 10 ){\r\n                                if (date < 10){\r\n                                    dateFormat=\"0\"+date+\"/\"+\"0\"+month+\"/\"+year;\r\n                                } else {\r\n                                    dateFormat=date+\"/\"+\"0\"+month+\"/\"+year;\r\n                                }\r\n\r\n                            } else {\r\n                                if (date < 10){\r\n                                    dateFormat = \"0\"+date+\"/\"+month+\"/\"+year;\r\n                                } else{\r\n                                    dateFormat = date+\"/\"+month+\"/\"+year;\r\n                                }\r\n                            }\r\n\r\n                            Date date1 = null;\r\n                            try {\r\n                                date1 = new SimpleDateFormat(\"dd/MM/yyyy\").parse(dateFormat);\r\n                            } catch (ParseException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                            Log.d(\"data\",dateFormat);\r\n                            expiringDate.setText(dateFormat);\r\n\r\n                            ManageDiscount.this.expiringDateInMillis =  date1.getTime();\r\n                        }\r\n                    },year,month,date);\r\n                    datePickerDialog.show();\r\n                }else{\r\n                    Toast toast = Toast.makeText(ManageDiscount.this,\"Inserire la data manualmente, poichÃ¨ la versione del tuo dispositivo non supporta l'inserimento automatico tramite calendario\",Toast.LENGTH_LONG);\r\n                    toast.setGravity(Gravity.CENTER, 0, 0);\r\n                    toast.show();\r\n                    expiringDate.setEnabled(true);\r\n                    expiringDate.setHint(\"Data di scadenza(gg/mm/aaaa)\");\r\n                    fromEditText = true;\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        add.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(checkInfo()){\r\n                    Discount discount= new Discount();\r\n                    String customDiscountUID=calculateMyCustomDiscountUID(businessUID,expiringDateInMillis);\r\n                    discount.setUID(customDiscountUID);\r\n                    discount.setBusinessUID(businessUID);\r\n                    discount.setExpiringDate(String.valueOf(expiringDateInMillis));\r\n                    discount.setState(\"\");\r\n                    discount.setDescription(stringedDescription);\r\n                    discount.setDiscountsQuantity(stringedQuantity);\r\n                    discount.setStartDiscountDate(todayInMills);\r\n                    addDiscount(customDiscountUID,discount);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        NetworkController networkController =new NetworkController();\r\n        if(!networkController.isConnected(ManageDiscount.this)){\r\n            networkController.connectionDialog(ManageDiscount.this);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        if(item.getItemId() == android.R.id.home){\r\n            finish();\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    private void addDiscount(String customDiscountUID, Discount discount){\r\n        db.collection(\"sconti\").document(customDiscountUID).set(discount).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if(task.isSuccessful()){\r\n                    Log.d(\"customDiscountUID\",customDiscountUID);\r\n                    getBusiness(customDiscountUID);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private boolean checkDateFormat(){\r\n        String stringDate = dateEditText;\r\n         Pattern DATE_PATTERN = Pattern.compile(\"([0-9]{2})/([0-9]{2})/([0-9]{4})\");\r\n        separetedDate = stringDate.split(\"/\");\r\n        Date dateEditText = null;\r\n\r\n        try {\r\n             dateEditText = new SimpleDateFormat(\"dd/MM/yyyy\").parse(stringDate);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        if(stringDate.isEmpty()){\r\n            this.expiringDate.setError(getResources().getString(R.string.EmptyDate));\r\n            this.expiringDate.requestFocus();\r\n            return false;\r\n        }else if(!DATE_PATTERN.matcher(stringDate).matches()){\r\n             Toast toast = Toast.makeText(ManageDiscount.this,\"Rispettare formato: gg/mm/aaaa\",Toast.LENGTH_LONG);\r\n             toast.setGravity(Gravity.CENTER, 0, 0);\r\n             toast.show();\r\n             this.expiringDate.setError(getResources().getString(R.string.InvalidDateFormat));\r\n             this.expiringDate.requestFocus();\r\n             return false;\r\n         }else if(Integer.parseInt(separetedDate[0]) <= 00 || Integer.parseInt(separetedDate[0]) > 31){\r\n            this.expiringDate.setError(getResources().getString(R.string.NotADay));\r\n            this.expiringDate.requestFocus();\r\n            return false;\r\n        }else if(Integer.parseInt(separetedDate[1]) <= 00 || Integer.parseInt(separetedDate[1]) > 12){\r\n            this.expiringDate.setError(getResources().getString(R.string.NotAMonth));\r\n            this.expiringDate.requestFocus();\r\n            return false;\r\n        }else if(Integer.parseInt(separetedDate[2]) < Calendar.getInstance().get(Calendar.YEAR)){\r\n            this.expiringDate.setError(getResources().getString(R.string.NotAYearFree));\r\n            this.expiringDate.requestFocus();\r\n            return false;\r\n        }else if(dateEditText.getTime() <= Calendar.getInstance().getTimeInMillis()){\r\n            this.expiringDate.setError(getResources().getString(R.string.InvalidDate));\r\n            this.expiringDate.requestFocus();\r\n            return false;\r\n        }\r\n\r\n         ManageDiscount.this.expiringDateInMillis =  dateEditText.getTime();\r\n         return true;\r\n    }\r\n\r\n    private void getBusiness(String customDiscountUID){\r\n        db.collection(\"attivita\").document(businessUID).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    DocumentSnapshot document=task.getResult();\r\n                    ArrayList<String> discountUID= (ArrayList<String>) document.get(\"discountUID\");\r\n                    if(discountUID == null){\r\n                        discountUID =new ArrayList<String>();\r\n                    }\r\n                    discountUID.add(customDiscountUID);\r\n                    updateBusiness(discountUID);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void updateBusiness(ArrayList<String> discountUID){\r\n        db.collection(\"attivita\").document(businessUID).update(\"discountUID\",discountUID).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if(task.isSuccessful()){\r\n                    Log.d(\"caricamento\",\"caricamento effettuato correttamente\");\r\n                }else{\r\n                    Log.d(\"caricamento\",\"caricamento non effettuato correttamente\");\r\n                }\r\n            }\r\n        }).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    private boolean checkInfo(){\r\n        stringedDescription=this.description.getText().toString().trim();\r\n        stringedQuantity=this.quantity.getText().toString().trim();\r\n        if(fromEditText)\r\n        dateEditText = expiringDate.getText().toString().trim();\r\n       // Log.d(\"MILLIS\", String.valueOf(expiringDateInMillis));\r\n        //Log.d(\"MILLIS\", String.valueOf(cal.getTimeInMillis()));\r\n\r\n        if(stringedDescription.isEmpty() || stringedDescription.length()>50){\r\n            this.description.setError( getResources().getString(R.string.InvalidDescription));\r\n            this.description.requestFocus();\r\n            return false;\r\n        }else if(stringedQuantity.isEmpty()){\r\n            this.quantity.setError( getResources().getString(R.string.numStepsEmpty));\r\n            this.quantity.requestFocus();\r\n            return false;\r\n        }else if(Long.parseLong(stringedQuantity) < 2000||  Long.parseLong(stringedQuantity) > 60000){\r\n            Toast toast = Toast.makeText(this,\"inserire un numero passi che sia compreso tra 2000 e 100000\",Toast.LENGTH_LONG);\r\n            toast.setGravity(Gravity.CENTER, 0, 0);\r\n            toast.show();\r\n            this.quantity.setError( getResources().getString(R.string.numStepsNotValid));\r\n            this.quantity.requestFocus();\r\n            return false;\r\n        } else if ((expiringDateInMillis <= cal.getTimeInMillis() || expiringDateInMillis == 0) && !fromEditText){\r\n            //mettere un avviso che indica di inserire correttamente la data\r\n            this.expiringDate.setError(\"Data non valida\");\r\n            this.expiringDate.requestFocus();\r\n            return false;\r\n        }else if(fromEditText && !checkDateFormat()){\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n    private String calculateMyCustomDiscountUID(String businessUID,long timeInMillis){\r\n        String stringedTimeInMills= String.valueOf(System.currentTimeMillis());\r\n        if(businessUID!=null && stringedTimeInMills!=null){\r\n            String customUID=null;\r\n            customUID= businessUID+stringedTimeInMills;\r\n            return customUID;\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n    private String getTodayInMills(){\r\n        Calendar cal = Calendar.getInstance();\r\n        int year  = cal.get(Calendar.YEAR);\r\n        int month = cal.get(Calendar.MONTH);\r\n        int date  = cal.get(Calendar.DATE);\r\n        cal.clear();\r\n        cal.set(year, month, date);\r\n        long todayMillis2 = cal.getTimeInMillis();\r\n        return String.valueOf(todayMillis2);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/walktoshop/Seller/ManageDiscount.java	(revision 673c9bfeb0ab1dfaa38788b2d830d46b3b89a92c)
+++ app/src/main/java/com/example/walktoshop/Seller/ManageDiscount.java	(date 1612191465187)
@@ -74,6 +74,7 @@
         //setting date picker
         cal=Calendar.getInstance();
         this.todayInMills=getTodayInMills();
+        expiringDate.setEnabled(false);
         //
         addDate.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -83,8 +84,8 @@
                 int month=cal.get(Calendar.MONTH);
                 Log.d("month", String.valueOf(month));
                 int year=cal.get(Calendar.YEAR);
-                expiringDate.setEnabled(false);
-                if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {
+                if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {
+                    expiringDate.setEnabled(false);
                     fromEditText = false;
                     DatePickerDialog datePickerDialog=new DatePickerDialog(ManageDiscount.this, android.R.style.Theme_DeviceDefault_Dialog, new DatePickerDialog.OnDateSetListener() {
                         @Override
Index: app/src/main/java/com/example/walktoshop/Seller/SellerViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.walktoshop.Seller;\r\n\r\nimport android.app.ActivityManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CalendarView;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.example.walktoshop.R;\r\nimport com.example.walktoshop.Seller.Business;\r\nimport com.example.walktoshop.User.CardView;\r\nimport com.example.walktoshop.User.StepCounter;\r\nimport com.example.walktoshop.User.UserView;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.lang.reflect.Field;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\n\r\npublic class SellerViewAdapter extends ArrayAdapter {\r\n    private Context context;\r\n    private ArrayList<Discount> discounts;\r\n    private String UID;\r\n    private ArrayList<String> businessUID;\r\n    private String usage;\r\n    FirebaseFirestore db =FirebaseFirestore.getInstance();\r\n\r\n    public SellerViewAdapter(Context context, ArrayList<Discount> discounts, String UID,ArrayList businessUID,String usage) {\r\n        super(context, R.layout.activity_sellerviewadapter);\r\n        this.context=context;\r\n        this.discounts=discounts;\r\n        this.UID = UID;\r\n        this.usage= usage;\r\n        this.businessUID = businessUID;\r\n\r\n    }\r\n    @Override\r\n    public int getCount() {\r\n        return discounts.size();\r\n    }\r\n    @Override\r\n    public Object getItem(int position) {\r\n        return discounts.get(position);\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(int position) {\r\n        return position;\r\n    }\r\n    @Override\r\n    public int getViewTypeCount() {\r\n        if(getCount() > 0){\r\n            return getCount();\r\n        }else{\r\n            return super.getViewTypeCount();\r\n        }\r\n    }\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return position;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\r\n        LayoutInflater layoutInflater=(LayoutInflater) context.getApplicationContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View activity = layoutInflater.inflate(R.layout.activity_sellerviewadapter,parent,false);\r\n        //caratteristiche card di sconto\r\n        TextView disocuntDescription= activity.findViewById(R.id.disocuntDescription);\r\n        TextView date = activity.findViewById(R.id.date);\r\n        //bottone eliminazione\r\n        ImageButton deleteDiscount =activity.findViewById(R.id.deleteDiscount);\r\n        //modifica\r\n        TextView difficulty = activity.findViewById(R.id.difficulty);\r\n        ImageView difficultyColor = activity.findViewById(R.id.difficultyColor);\r\n        ImageButton arrow = (ImageButton) activity.findViewById(R.id.arrow);\r\n        ImageView addDiscount = (ImageView) activity.findViewById(R.id.addButton);\r\n\r\n        //bottone attivazione contapassi\r\n        //bottone abilitazione\r\n        if(this.discounts.get(position) != null && position>=0 && !discounts.isEmpty()){\r\n            Discount d=this.discounts.get(position);\r\n            //settare tutti gli attributi xml\r\n            Log.d(\"DATE\", d.millisecondsToDate(d.getExpiringDate()));\r\n            date.setText(\"scadenza: \"+d.millisecondsToDate(d.getExpiringDate()));\r\n            disocuntDescription.setText(d.getDescription());\r\n            String stringedGoal=d.getDiscountsQuantity();\r\n            Log.d(\"string\",stringedGoal+\"\");\r\n\r\n            if(stringedGoal != null){\r\n                int goal= Integer.parseInt(stringedGoal);\r\n\r\n                if(goal<5000){\r\n                    difficulty.setText(\"Facile\");\r\n\r\n                }else if(goal>=5000 && goal<=20000){\r\n                    difficulty.setText(\"DifficoltÃ  Media\");\r\n                    difficultyColor.setImageResource(R.drawable.ic_yellow);\r\n                }else if(goal>20000){\r\n                    difficulty.setText(\"Difficile\");\r\n                    difficultyColor.setImageResource(R.drawable.ic_red);\r\n                }\r\n            }\r\n            //visibility\r\n            deleteDiscount.setVisibility(View.GONE);\r\n            if(this.usage==\"sellerHome\"){\r\n                arrow.setVisibility(View.GONE);\r\n                addDiscount.setVisibility(View.GONE);\r\n                deleteDiscount.setVisibility(View.VISIBLE);\r\n                if(Long.parseLong(d.getExpiringDate()) < Calendar.getInstance().getTimeInMillis()){\r\n                    date.setText(\"Scaduto\");\r\n                }\r\n                deleteDiscount.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        //Log.d(\"p\",discounts.get(position).getUID()+\" \");\r\n                        getBusiness(position);\r\n                    }\r\n                });\r\n            }else if(this.usage==\"userHome\"){\r\n                arrow.setVisibility(View.VISIBLE);\r\n                addDiscount.setVisibility(View.GONE);\r\n                if(getSharedPrefDiscountState(d.getUID())==\"completed\"){\r\n                    date.setText(\"Completato\");\r\n                }\r\n                if(Long.parseLong(d.getExpiringDate()) < Calendar.getInstance().getTimeInMillis()){\r\n                    arrow.setVisibility(View.GONE);\r\n                    date.setText(\"Scaduto\");\r\n                }\r\n                arrow.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        final Intent intent = new Intent(getContext(), CardView.class);\r\n                        Gson gson = new Gson();\r\n                        String jsonDiscount = gson.toJson(d);\r\n                        intent.putExtra(\"discount\",jsonDiscount);\r\n                        Log.d(\"json\",jsonDiscount);\r\n                        intent.putExtra(\"UID\",UID);\r\n                        context.startActivity(intent);\r\n                    }\r\n                });\r\n                //qui si devono inserire elementi grafici tipici della vista in cui Ã¨ chiamato\r\n            }else if(this.usage==\"backdropList\"){\r\n                arrow.setVisibility(View.GONE);\r\n                addDiscount.setVisibility(View.VISIBLE);\r\n                addDiscount.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        saveDiscountSharedPref(d);\r\n                        killServiceIfRunning();\r\n                        addDiscounts(d.getUID());\r\n                        Toast toast =  Toast.makeText(getContext(),\"Sconto aggiunto con successo!Visita la Home\",Toast.LENGTH_LONG);\r\n                        toast.setGravity(Gravity.CENTER, 0, 0);\r\n                        toast.show();\r\n\r\n                        //funzione che sava in shared pref\r\n                    }\r\n                });\r\n                //qui si devono inserire elementi grafici tipici della vista in cui Ã¨ chiamato\r\n            }\r\n        }\r\n        return activity;\r\n    }\r\n    private void saveDiscountSharedPref(Discount d){\r\n        SharedPreferences prefs = getContext().getSharedPreferences(d.getUID(), MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = prefs.edit();\r\n        editor.putInt(\"steps\", 0);\r\n        editor.putString(\"state\",null);\r\n        editor.commit();\r\n    }\r\n    private String getSharedPrefDiscountState(String discountUID){\r\n        SharedPreferences prefs = getContext().getSharedPreferences(discountUID, MODE_PRIVATE);\r\n        if(prefs.contains(\"state\")){\r\n            String value=prefs.getString(\"state\",null);\r\n            return value;\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n    private void deleteDiscount(int position){\r\n        //getBusiness(position);\r\n        db.collection(\"sconti\").document(discounts.get(position).getUID())\r\n                .delete()\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(\"delete\", \"DocumentSnapshot successfully deleted!\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(\"delete\", \"Error deleting document\", e);\r\n                    }\r\n                }).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                SellerViewAdapter.this.discounts.remove(position);\r\n                SellerViewAdapter.this.notifyDataSetChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getBusiness(int position)\r\n    {\r\n        db.collection(\"attivita\").document(businessUID.get(0)).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful())\r\n                {   Log.d(\"position\",position+\" \");\r\n                    DocumentSnapshot document = task.getResult();\r\n                    ArrayList<String> discountUID = (ArrayList<String>) document.get(\"discountUID\");\r\n                    discountUID.remove(position);\r\n                    Log.d(\"discountUID\", discountUID.size()+\" \");\r\n                    updateBusiness(discountUID,position);\r\n                }else{\r\n                    Log.d(\"non successo\",\"non successo\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateBusiness(ArrayList<String> discountUID,int position)\r\n    {\r\n        db.collection(\"attivita\").document(businessUID.get(0)).update(\"discountUID\",discountUID).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if(task.isSuccessful())\r\n                {\r\n                    deleteDiscount(position);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    //query di aggiunta sconto\r\n    private void addDiscounts(String discountuid){\r\n        db.collection(\"utente\").document(UID).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    DocumentSnapshot document=task.getResult();\r\n                    ArrayList<String> discountUID= (ArrayList<String>) document.get(\"discountUID\");\r\n                    if(discountUID==null){\r\n                        discountUID=new ArrayList<>();\r\n                    }\r\n                    discountUID.add(discountuid);\r\n                    updateUserDiscounts(discountUID);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void updateUserDiscounts(ArrayList<String> discountUID){\r\n        db.collection(\"utente\").document(UID).update(\"discountUID\",discountUID);\r\n    }\r\n    private void killServiceIfRunning(){\r\n        if(isMyServiceRunning(StepCounter.class) == true){\r\n            Intent intent =new Intent(getContext(),StepCounter.class);\r\n            Toast.makeText(getContext(),\"Contapassi disattivato\",Toast.LENGTH_SHORT).show();\r\n            getContext().stopService(intent);\r\n        }\r\n    }\r\n    private boolean isMyServiceRunning(Class<?> serviceClass) {\r\n        ActivityManager manager = (ActivityManager) getContext().getSystemService(Context.ACTIVITY_SERVICE);\r\n        for (ActivityManager.RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {\r\n            if (serviceClass.getName().equals(service.service.getClassName())) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/walktoshop/Seller/SellerViewAdapter.java	(revision 673c9bfeb0ab1dfaa38788b2d830d46b3b89a92c)
+++ app/src/main/java/com/example/walktoshop/Seller/SellerViewAdapter.java	(date 1612191017404)
@@ -19,6 +19,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
 import com.example.walktoshop.R;
 import com.example.walktoshop.Seller.Business;
@@ -135,9 +136,12 @@
                 arrow.setVisibility(View.GONE);
                 addDiscount.setVisibility(View.GONE);
                 deleteDiscount.setVisibility(View.VISIBLE);
-                if(Long.parseLong(d.getExpiringDate()) < Calendar.getInstance().getTimeInMillis()){
-                    date.setText("Scaduto");
+                if(d != null){
+                    if(Long.parseLong(d.getExpiringDate()) < Calendar.getInstance().getTimeInMillis()){
+                        date.setText("Scaduto");
+                    }
                 }
+
                 deleteDiscount.setOnClickListener(new View.OnClickListener() {
                     @Override
                     public void onClick(View v) {
@@ -151,10 +155,6 @@
                 if(getSharedPrefDiscountState(d.getUID())=="completed"){
                     date.setText("Completato");
                 }
-                if(Long.parseLong(d.getExpiringDate()) < Calendar.getInstance().getTimeInMillis()){
-                    arrow.setVisibility(View.GONE);
-                    date.setText("Scaduto");
-                }
                 arrow.setOnClickListener(new View.OnClickListener() {
                     @Override
                     public void onClick(View v) {
Index: app/src/main/java/com/example/walktoshop/User/FragmentUserMapBackDrop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.walktoshop.User;\r\n\r\nimport android.app.ActivityManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.coordinatorlayout.widget.CoordinatorLayout;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.walktoshop.R;\r\nimport com.example.walktoshop.Seller.Discount;\r\nimport com.example.walktoshop.Seller.SellerView;\r\nimport com.example.walktoshop.Seller.SellerViewAdapter;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.bottomsheet.BottomSheetBehavior;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\n\r\npublic class FragmentUserMapBackDrop extends Fragment {\r\n\r\n    BottomSheetBehavior sheetBehavior;\r\n    FirebaseFirestore db= FirebaseFirestore.getInstance();\r\n    private ListView backdropListview;\r\n    private ArrayList<Discount> discountArray= new ArrayList<>();\r\n    private ArrayList<String> businessUID=new ArrayList<>();\r\n    private String UID;\r\n    private TextView discountDescription;\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n\r\n        View coordinatorLayout = (CoordinatorLayout)inflater.inflate(R.layout.fragment_map_backdrop, container, false);\r\n        backdropListview = coordinatorLayout.findViewById(R.id.backdropListView);\r\n        discountDescription= coordinatorLayout.findViewById(R.id.discountDescription);\r\n\r\n        ImageView filterIcon = coordinatorLayout.findViewById(R.id.filterIcon);\r\n        LinearLayout contentLayout = coordinatorLayout.findViewById(R.id.contentLayout);\r\n        //vengono prese le informazioni passate cliccando sul marker\r\n        Bundle bundle = this.getArguments();\r\n        if (bundle != null) {\r\n            businessUID.add(bundle.getString(\"businessUID\"));\r\n            this.UID=bundle.getString(\"UID\");\r\n            getUserDiscount();\r\n        }\r\n        sheetBehavior = BottomSheetBehavior.from(contentLayout);\r\n        sheetBehavior.setFitToContents(false);\r\n        sheetBehavior.setHideable(false);//evita che il backdrop sia completamente oscurato\r\n        sheetBehavior.setState(BottomSheetBehavior.STATE_HALF_EXPANDED);//inizialmente il  backdrop parte esteso\r\n\r\n        filterIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                toggleFilters();\r\n            }\r\n        });\r\n        return coordinatorLayout;\r\n    }\r\n\r\n\r\n    private void getUserDiscount() {\r\n        db.collection(\"utente\").document(UID).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    DocumentSnapshot document = task.getResult();\r\n                    ArrayList<String> userDisUID = (ArrayList<String>) document.get(\"discountUID\");\r\n                    Log.d(\"disocunt uidArray\",userDisUID.size()+\"\");\r\n                    if (userDisUID!= null){\r\n                        getBusiness(userDisUID);\r\n                    } else{\r\n                        final SellerViewAdapter adapter=new SellerViewAdapter(getContext(),discountArray, UID,businessUID,\"backdropList\");\r\n                        backdropListview.setAdapter(adapter);\r\n                    }\r\n                    Log.d(\"disUID\", String.valueOf(userDisUID));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getBusiness(ArrayList<String> userDisUID) {\r\n        db.collection(\"attivita\").document(businessUID.get(0)).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful())\r\n                {\r\n                    DocumentSnapshot document = task.getResult();\r\n                    ArrayList<String> discountUID = (ArrayList<String>) document.get(\"discountUID\");\r\n                    Log.d(\"disBusiness\", String.valueOf(discountUID));\r\n                    if(discountUID!=null){\r\n                        Log.d(\"discount\",discountUID.size()+\" \");\r\n                        Log.d(\"business\",businessUID.get(0));\r\n                        discountDescription.setText(\"Lista sconti disponibili\");\r\n                        if(!discountUID.isEmpty()){\r\n                            getDiscounts(discountUID, userDisUID);\r\n                        }else{\r\n                            discountDescription.setText(\"Nessuno sconto disponibile\");\r\n                            final SellerViewAdapter adapter=new SellerViewAdapter(getContext(),discountArray, UID,businessUID,\"backdropList\");\r\n                            backdropListview.setAdapter(adapter);\r\n                        }\r\n                    }else{\r\n                        discountDescription.setText(\"Nessuno sconto disponibile\");\r\n                    }\r\n                }else{\r\n                    Log.d(\"non successo\",\"non successo\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getDiscounts(ArrayList<String> discountUID, ArrayList<String> userDisUID){\r\n\r\n        ArrayList<String> disUID = new ArrayList<String>();\r\n\r\n        for(int i=0;i<discountUID.size();i++){\r\n            if(!userDisUID.contains(discountUID.get(i))){\r\n                disUID.add(discountUID.get(i));\r\n            }\r\n        }\r\n        for(int k=0;k<disUID.size();k++){\r\n            Log.d(\"dis\",disUID.get(k).toString());\r\n            int finalK = k;\r\n            db.collection(\"sconti\").document(disUID.get(k)).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                    if(task.isSuccessful()){\r\n                        Discount discount=new Discount();\r\n                        DocumentSnapshot document=task.getResult();\r\n                        discount.setUID(document.getString(\"uid\"));\r\n                        discount.setBusinessUID(document.getString(\"businessUID\"));\r\n                        discount.setState(document.getString(\"state\"));\r\n                        discount.setExpiringDate(document.getString(\"expiringDate\"));\r\n                        discount.setStepNumber(document.getString(\"stepNumber\"));\r\n                        discount.setDescription(document.getString(\"description\"));\r\n                        discount.setDiscountsQuantity(document.getString(\"discountsQuantity\"));\r\n\r\n                        if(Long.parseLong(discount.getExpiringDate()) > Calendar.getInstance().getTimeInMillis()){\r\n                            discountArray.add(discount);\r\n\r\n                        } else {\r\n                            disUID.remove(finalK);\r\n                        }\r\n                    }\r\n                }\r\n            }).addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                    final SellerViewAdapter adapter=new SellerViewAdapter(getContext(),discountArray, UID,businessUID,\"backdropList\");\r\n                    backdropListview.setAdapter(adapter);\r\n\r\n                }\r\n            });\r\n        }\r\n        if(disUID.isEmpty() || disUID == null){\r\n            discountDescription.setText(\"Nessuno sconto disponibile\");\r\n        }\r\n    }\r\n\r\n    private void toggleFilters() {\r\n        if (sheetBehavior.getState() == BottomSheetBehavior.STATE_EXPANDED) {\r\n            sheetBehavior.setHideable(true);\r\n            sheetBehavior.setState(BottomSheetBehavior.STATE_HIDDEN);\r\n        } else {\r\n            sheetBehavior.setHideable(true);\r\n            sheetBehavior.setState(BottomSheetBehavior.STATE_HIDDEN);\r\n        }\r\n    }\r\n    //killa il service se attivo\r\n    @Override\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n        killServiceIfRunning();\r\n    }\r\n    private boolean isMyServiceRunning(Class<?> serviceClass) {\r\n        ActivityManager manager = (ActivityManager) getActivity().getSystemService(Context.ACTIVITY_SERVICE);\r\n        for (ActivityManager.RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {\r\n            if (serviceClass.getName().equals(service.service.getClassName())) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    private void killServiceIfRunning(){\r\n        if(isMyServiceRunning(StepCounter.class) == true){\r\n            Intent intent =new Intent(getActivity(),StepCounter.class);\r\n            Toast.makeText(getActivity(),\"Contapassi disattivato\",Toast.LENGTH_SHORT).show();\r\n            getActivity().stopService(intent);\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/walktoshop/User/FragmentUserMapBackDrop.java	(revision 673c9bfeb0ab1dfaa38788b2d830d46b3b89a92c)
+++ app/src/main/java/com/example/walktoshop/User/FragmentUserMapBackDrop.java	(date 1612190210412)
@@ -19,6 +19,7 @@
 import androidx.annotation.Nullable;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.fragment.app.Fragment;
+import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
 import com.example.walktoshop.R;
 import com.example.walktoshop.Seller.Discount;
Index: app/src/main/res/layout/activity_managediscount.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<LinearLayout\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_width=\"match_parent\" xmlns:tools=\"http://schemas.android.com/tools\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:orientation=\"vertical\"\r\n    android:background=\"@color/white_ice\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/discountImage\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"190dp\"\r\n        android:src=\"@drawable/_0943903\"/>\r\n\r\n\r\n    <EditText\r\n        android:layout_marginTop=\"75dp\"\r\n        android:id=\"@+id/description\"\r\n        android:layout_width=\"317dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_height=\"54dp\"\r\n        android:background=\"@drawable/ic_text_box\"\r\n        android:drawableStart=\"@drawable/ic_description\"\r\n        android:drawablePadding=\"4dp\"\r\n        android:elevation=\"6dp\"\r\n        android:ems=\"10\"\r\n        android:hint=\"@string/description\"\r\n        android:paddingStart=\"6dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.394\" />\r\n\r\n    <EditText\r\n        android:layout_marginTop=\"30dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_width=\"317dp\"\r\n        android:layout_height=\"54dp\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        android:hint=\"@string/disocuntsQuantity\"\r\n        android:drawablePadding=\"4dp\"\r\n        android:elevation=\"6dp\"\r\n        android:ems=\"10\"\r\n        android:paddingStart=\"6dp\"\r\n        android:background=\"@drawable/ic_text_box\"\r\n        android:drawableStart=\"@drawable/ic_walk\"\r\n        android:id=\"@+id/disocuntsQuantity\"\r\n        android:inputType=\"number\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"center\"\r\n        android:orientation=\"horizontal\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:layout_marginRight=\"7dp\">\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/addDate\"\r\n            android:layout_width=\"62dp\"\r\n            android:layout_height=\"44dp\"\r\n            android:background=\"@color/white_ice\"\r\n            android:drawableStart=\"@drawable/ic_calendar\"\r\n            android:src=\"@android:drawable/ic_menu_my_calendar\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/expiringDate\"\r\n            android:layout_width=\"270dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@drawable/ic_text_box\"\r\n            android:elevation=\"6dp\"\r\n            android:hint=\"@string/expiringDate\"\r\n            android:textSize=\"25dp\"\r\n            />\r\n    </LinearLayout>\r\n    <Button\r\n        android:layout_marginTop=\"30dp\"\r\n        android:layout_marginRight=\"20dp\"\r\n        android:layout_gravity=\"bottom|end\"\r\n        android:id=\"@+id/add\"\r\n        android:background=\"@color/verde_maggio\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/add\"\r\n        />\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_managediscount.xml	(revision 673c9bfeb0ab1dfaa38788b2d830d46b3b89a92c)
+++ app/src/main/res/layout/activity_managediscount.xml	(date 1612192595613)
@@ -20,8 +20,10 @@
         android:id="@+id/description"
         android:layout_width="317dp"
         android:layout_gravity="center"
+        android:textColor="@color/black"
         android:layout_height="54dp"
         android:background="@drawable/ic_text_box"
+        android:drawableTint="@color/verde_maggio"
         android:drawableStart="@drawable/ic_description"
         android:drawablePadding="4dp"
         android:elevation="6dp"
@@ -35,23 +37,26 @@
         app:layout_constraintVertical_bias="0.394" />
 
     <EditText
-        android:layout_marginTop="30dp"
-        android:layout_gravity="center"
+        android:id="@+id/disocuntsQuantity"
         android:layout_width="317dp"
         android:layout_height="54dp"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        android:hint="@string/disocuntsQuantity"
+        android:layout_gravity="center"
+        android:layout_marginTop="30dp"
+        android:background="@drawable/ic_text_box"
+        android:drawableStart="@drawable/ic_walk"
         android:drawablePadding="4dp"
         android:elevation="6dp"
         android:ems="10"
+        android:drawableTint="@color/verde_maggio"
+        android:hint="@string/disocuntsQuantity"
+        android:inputType="number"
         android:paddingStart="6dp"
-        android:background="@drawable/ic_text_box"
-        android:drawableStart="@drawable/ic_walk"
-        android:id="@+id/disocuntsQuantity"
-        android:inputType="number" />
+        android:textColor="@color/black"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:tint="@color/verde_maggio" />
 
     <LinearLayout
         android:layout_width="wrap_content"
@@ -65,6 +70,7 @@
             android:id="@+id/addDate"
             android:layout_width="62dp"
             android:layout_height="44dp"
+            app:tint="@color/verde_maggio"
             android:background="@color/white_ice"
             android:drawableStart="@drawable/ic_calendar"
             android:src="@android:drawable/ic_menu_my_calendar" />
@@ -72,7 +78,7 @@
         <EditText
             android:id="@+id/expiringDate"
             android:layout_width="270dp"
-            android:layout_height="wrap_content"
+            android:layout_height="wrap_content" android:textColor="@color/black"
             android:background="@drawable/ic_text_box"
             android:elevation="6dp"
             android:hint="@string/expiringDate"

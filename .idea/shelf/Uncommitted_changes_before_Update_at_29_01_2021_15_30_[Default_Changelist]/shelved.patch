Index: app/src/main/java/com/example/walktoshop/User/UserStatistics.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.walktoshop.User;\r\n\r\nimport android.app.Activity;\r\nimport android.app.ActivityManager;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.DragEvent;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport com.example.walktoshop.NetworkController.NetworkController;\r\nimport com.example.walktoshop.R;\r\nimport com.github.mikephil.charting.charts.BarChart;\r\nimport com.github.mikephil.charting.components.XAxis;\r\nimport com.github.mikephil.charting.data.BarData;\r\nimport com.github.mikephil.charting.data.BarDataSet;\r\nimport com.github.mikephil.charting.data.BarEntry;\r\nimport com.github.mikephil.charting.formatter.IndexAxisValueFormatter;\r\nimport com.github.mikephil.charting.interfaces.datasets.IBarDataSet;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\n\r\npublic class UserStatistics extends AppCompatActivity {\r\n    FirebaseFirestore db =FirebaseFirestore.getInstance();\r\n    String UID;\r\n    BarChart barChart;\r\n    double latitude;\r\n    double longitude;\r\n    String city;\r\n    BottomNavigationView bottomNavigationView;\r\n    private ArrayList<BarEntry> dailySteps=new ArrayList<>();\r\n    private ArrayList<BarEntry> dailyKm=new ArrayList<>();\r\n    private ArrayList<BarEntry> dailyKcal= new ArrayList<>();\r\n    private ArrayList<String> days = new ArrayList<>();\r\n    private float stepsAverage = 0;\r\n    private float kcalAverage = 0;\r\n    private float kmAverage = 0;\r\n    private TextView stepsAverageText;\r\n    private TextView kcalAverageText;\r\n    private TextView kilometersAverageText;\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_user_statistics);\r\n        Intent intent = getIntent();\r\n        if (intent.hasExtra(\"UID\") && intent.hasExtra(\"city\") && intent.hasExtra(\"latitude\") && intent.hasExtra(\"longitude\")) {\r\n            UID = intent.getStringExtra(\"UID\");\r\n            city = intent.getStringExtra(\"city\");\r\n            latitude = intent.getDoubleExtra(\"latitude\", 0.0f);\r\n            longitude = intent.getDoubleExtra(\"longitude\", 0.0f);\r\n        }\r\n        barChart = findViewById(R.id.barChart);\r\n        stepsAverageText =findViewById(R.id.stepsAvg);\r\n        kcalAverageText= findViewById(R.id.kcalAvg);\r\n        kilometersAverageText=findViewById(R.id.kilometersAvg);\r\n        bottomNavigationView = (BottomNavigationView) findViewById(R.id.bottom_navigation);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                switch (item.getItemId()) {\r\n                    case R.id.action_home:\r\n                        goHome();\r\n                        break;\r\n                    case R.id.action_map:\r\n                        goToUserViewMap();\r\n                        break;\r\n                    case R.id.action_notification:\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        NetworkController networkController =new NetworkController();\r\n        if(!networkController.isConnected(UserStatistics.this)){\r\n            networkController.connectionDialog(UserStatistics.this);\r\n        }\r\n        Log.d(\"connection state\",networkController.isConnected(UserStatistics.this)+\"\");\r\n        getDailyWalk();\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        killServiceIfRunning();\r\n    }\r\n    private void killServiceIfRunning(){\r\n        if(isMyServiceRunning(StepCounter.class) == true){\r\n            Intent intent =new Intent(this,StepCounter.class);\r\n            Toast.makeText(this,\"Contapassi disattivato\",Toast.LENGTH_SHORT).show();\r\n            stopService(intent);\r\n        }\r\n    }\r\n    private boolean isMyServiceRunning(Class<?> serviceClass) {\r\n        ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);\r\n        for (ActivityManager.RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {\r\n            if (serviceClass.getName().equals(service.service.getClassName())) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private void getDailyWalk(){\r\n        db.collection(\"utente\").document(UID).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    DocumentSnapshot document= task.getResult();\r\n                    ArrayList<String> stringedWalks= (ArrayList<String>) document.get(\"walk\");\r\n                    int userHeight= Integer.parseInt(document.getString(\"height\"));\r\n                    int userWeight= Integer.parseInt(document.getString(\"weight\"));\r\n                    if(stringedWalks!=null){\r\n                        int numberOfUserWalks=0;\r\n                        int totalNumberOfUserWalks= stringedWalks.size()-1;\r\n                        for (int i=0;i<6;i++){\r\n                            if(totalNumberOfUserWalks-i>=0){\r\n                                String walkInfo=stringedWalks.get(totalNumberOfUserWalks-i);\r\n                                Walk walk= getWalkInfoFromString(walkInfo);\r\n                                UserStatistics.this.days.add(millisecondsToDate(walk.getDate()));\r\n                                long steps= Long.parseLong((walk.getNumberOfSteps()));\r\n                                float meters= calculateKilometers(userHeight,steps)*1000;//trasformare in metri per il grafico\r\n                                int kcal= calculateKcal(userWeight,steps);\r\n                                Log.d(\"index\",days.get(i)+\" \"+steps);\r\n                                stepsAverage= stepsAverage + steps;\r\n                                kcalAverage= kcalAverage + kcal;\r\n                                kmAverage =kmAverage + meters;\r\n                                UserStatistics.this.dailySteps.add(new BarEntry(i,steps));\r\n                                UserStatistics.this.dailyKm.add(new BarEntry(i,meters));\r\n                                UserStatistics.this.dailyKcal.add(new BarEntry(i,kcal));\r\n                                numberOfUserWalks++;\r\n                            }\r\n                        }\r\n                        stepsAverage=Math.round((float) stepsAverage/numberOfUserWalks);\r\n                        kcalAverage=Math.round((float) kcalAverage/numberOfUserWalks);\r\n                        kmAverage=(float) (kmAverage/numberOfUserWalks)/1000;//riporto in km\r\n                        String[] daysArray = new String[UserStatistics.this.days.size()];\r\n                        daysArray = UserStatistics.this.days.toArray(daysArray);\r\n                        setBarChart(dailyKm,dailyKcal,dailySteps,daysArray);\r\n                        //set medie\r\n                        stepsAverageText.setText(\"Media Passi:\"+(int) stepsAverage);\r\n                        kcalAverageText.setText(\"Media calorie:\"+(int) kcalAverage);\r\n                        kilometersAverageText.setText(\"Media kilometri:\"+(int) kmAverage);\r\n\r\n                        Log.d(\"average\",\"walks\"+numberOfUserWalks+\"steps\"+ stepsAverage +\"kcal\"+kcalAverage+\"km\"+kmAverage);\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void goHome() {\r\n        final Intent intent = new Intent(this, UserView.class);\r\n        User user = new User();\r\n        intent.putExtra(\"UID\", UID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void goToUserViewMap() {\r\n        final Intent intent = new Intent(UserStatistics.this, UserMapView.class);\r\n        intent.putExtra(\"UID\", UID);\r\n        intent.putExtra(\"city\",city);\r\n        intent.putExtra(\"latitude\",latitude);\r\n        intent.putExtra(\"longitude\",longitude);\r\n        startActivity(intent);\r\n    }\r\n    private void setBarChart(ArrayList<BarEntry> dailyKm,ArrayList<BarEntry> dailyKcal,ArrayList<BarEntry> dailySteps, String[] days){\r\n        BarDataSet steps = new BarDataSet(dailySteps,\"Passi giornalieri\");\r\n        steps.setColor(Color.RED);\r\n        BarDataSet kcal = new BarDataSet(dailyKcal,\"Kcal giornaliere\");\r\n        kcal.setColor(Color.GREEN);\r\n        BarDataSet km = new BarDataSet(dailyKm,\"Metri giornalieri\");\r\n        km.setColor(Color.MAGENTA);\r\n\r\n        BarData data = new BarData(steps,kcal,km);\r\n        barChart.setData(data);\r\n\r\n        XAxis xAxis = barChart.getXAxis();\r\n        xAxis.setValueFormatter(new IndexAxisValueFormatter(days));\r\n        xAxis.setCenterAxisLabels(true);\r\n        xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);\r\n        xAxis.setGranularity(1);\r\n        xAxis.setGranularityEnabled(true);\r\n\r\n        barChart.setDragEnabled(true);\r\n        barChart.setVisibleXRangeMaximum(1);\r\n\r\n        float barSpace = 0.12f;\r\n        float groupSpace = 0.16f;\r\n        data.setBarWidth(0.16f);\r\n\r\n        barChart.getXAxis().setAxisMinimum(0);\r\n        barChart.getXAxis().setAxisMaximum(0+barChart.getBarData().getGroupWidth(groupSpace, barSpace)*7);\r\n        barChart.getAxisLeft().setAxisMinimum(0);\r\n\r\n        barChart.groupBars(0, groupSpace, barSpace);\r\n        barChart.invalidate();\r\n    }\r\n    private Walk getWalkInfoFromString(String info){\r\n        String[] todayAndSteps =info.split(\",\");\r\n        Walk walk =new Walk();\r\n        walk.setDate(todayAndSteps[0]);\r\n        walk.setNumberOfSteps(todayAndSteps[1]);\r\n        return walk;\r\n    }\r\n    private float calculateKilometers(int height,long steps){\r\n        float meters;\r\n        if(height<170){\r\n            meters=Math.round((float)600*steps/1000);\r\n        }else{\r\n            meters=Math.round((float)700*steps/1000);\r\n        }\r\n        float kilometers=meters/1000;\r\n        Log.d(\"km\",kilometers+\"\");\r\n        return kilometers;\r\n    }\r\n    private int calculateKcal(int weight,long steps){\r\n        int kcal;\r\n        Log.d(\"weight\",weight+\"\");\r\n        kcal= (int) Math.round((float)weight*0.0005*steps);\r\n        Log.d(\"kcal\",kcal+\"\");\r\n        return kcal;\r\n    }\r\n    private String millisecondsToDate(String milliseconds){\r\n        if(milliseconds!=null){\r\n            DateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n            long longMilliSeconds= Long.parseLong(milliseconds);\r\n            Calendar calendar = Calendar.getInstance();\r\n            calendar.setTimeInMillis(longMilliSeconds);\r\n            return formatter.format(calendar.getTime());\r\n        }\r\n        return \"\";\r\n    }\r\n    //check\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/walktoshop/User/UserStatistics.java	(revision c3b1d13e90b0f4cf751823be3685a9fe4e5437c0)
+++ app/src/main/java/com/example/walktoshop/User/UserStatistics.java	(date 1611927282082)
@@ -1,28 +1,17 @@
 package com.example.walktoshop.User;
 
-import android.app.Activity;
 import android.app.ActivityManager;
-import android.app.AlertDialog;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
 import android.graphics.Color;
-import android.net.ConnectivityManager;
-import android.net.NetworkInfo;
 import android.os.Bundle;
-import android.provider.Settings;
 import android.util.Log;
-import android.view.DragEvent;
 import android.view.MenuItem;
-import android.view.View;
 import android.widget.TextView;
 import android.widget.Toast;
-
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
-import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
-
 import com.example.walktoshop.NetworkController.NetworkController;
 import com.example.walktoshop.R;
 import com.github.mikephil.charting.charts.BarChart;
@@ -31,13 +20,11 @@
 import com.github.mikephil.charting.data.BarDataSet;
 import com.github.mikephil.charting.data.BarEntry;
 import com.github.mikephil.charting.formatter.IndexAxisValueFormatter;
-import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.firebase.firestore.DocumentSnapshot;
 import com.google.firebase.firestore.FirebaseFirestore;
-
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
Index: app/src/main/java/com/example/walktoshop/User/UserMapView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.walktoshop.User;\r\n\r\nimport android.Manifest;\r\nimport android.app.ActivityManager;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.Configuration;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ListView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport com.example.walktoshop.NetworkController.NetworkController;\r\nimport com.example.walktoshop.R;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.libraries.places.api.model.Place;\r\nimport com.google.android.libraries.places.api.net.PlacesClient;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\n\r\npublic class UserMapView extends AppCompatActivity implements GoogleMap.OnMarkerClickListener,OnMapReadyCallback {\r\n    GoogleMap mMap;\r\n    ProgressBar progressBar;\r\n    List<LatLng> latLngs = new ArrayList<LatLng>();\r\n    LocationManager service;\r\n    LocationListener locationListener;\r\n    double latitude;\r\n    double longitude;\r\n    String city;\r\n    String UID;\r\n    FusedLocationProviderClient fusedLocationClient;\r\n    SupportMapFragment mapFragment;\r\n    FirebaseFirestore db =FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_user_map_view);\r\n        progressBar = (ProgressBar) findViewById(R.id.userMapViewProgressBar);\r\n        progressBar.setProgress(View.VISIBLE);\r\n\r\n        mapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                .findFragmentById(R.id.map);\r\n\r\n        Toast.makeText(UserMapView.this,\"Apertura mappa in corso\", Toast.LENGTH_LONG).show();\r\n\r\n        Intent intent = getIntent();\r\n        if (intent.hasExtra(\"UID\") && intent.hasExtra(\"city\") && intent.hasExtra(\"latitude\") && intent.hasExtra(\"longitude\")) {\r\n            UID = intent.getStringExtra(\"UID\");\r\n            city=intent.getStringExtra(\"city\");\r\n            latitude= intent.getDoubleExtra(\"latitude\",0.0f);\r\n            longitude= intent.getDoubleExtra(\"longitude\",0.0f);\r\n            //Log.d(\"city\",latitude+city +longitude);\r\n            db.collection(\"attivita\").whereEqualTo(\"locality\", city).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                    if(task.isSuccessful()){\r\n                        for (QueryDocumentSnapshot document : task.getResult()){\r\n                            double lat = Double.parseDouble(document.getString(\"latitude\"));\r\n                            double longt = Double.parseDouble(document.getString(\"longitude\"));\r\n                            latLngs.add(new LatLng(lat, longt));\r\n                        }\r\n                    }\r\n                    mapFragment.getMapAsync(UserMapView.this);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n        BottomNavigationView bottomNavigationView = (BottomNavigationView) findViewById(R.id.bottom_navigation);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                switch (item.getItemId()) {\r\n                    case R.id.action_home:\r\n                        goHome();\r\n                        break;\r\n                    case R.id.action_statistics:\r\n                        goUserStatistics();\r\n                        break;\r\n                    case R.id.action_notification:\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        NetworkController networkController =new NetworkController();\r\n        if(!networkController.isConnected(UserMapView.this)){\r\n            networkController.connectionDialog(UserMapView.this);\r\n        }\r\n    }\r\n\r\n    private void getBusinessLatLng(String city) {\r\n        Log.d(\"City1\", city);\r\n        db.collection(\"attivita\").whereEqualTo(\"locality\", city).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    for (QueryDocumentSnapshot document : task.getResult()){\r\n                        double lat = Double.parseDouble(document.getString(\"latitude\"));\r\n                        double longt = Double.parseDouble(document.getString(\"longitude\"));\r\n\r\n                    }\r\n                    /*\r\n                    //latLngs.add(new LatLng(lat, longt));\r\n                    LatLng latLng = new LatLng(lat,longt);\r\n                    Log.d(\"Location\",location.getLatitude()+\"+\"+location.getLongitude());\r\n                    MarkerOptions options = new MarkerOptions().position(latLng);\r\n                    googleMap.addMarker(options);\r\n                    LatLng myPlace = new LatLng(location.getLatitude(), location.getLongitude());\r\n                    googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(myPlace, 12));\r\n                    googleMap.setOnMarkerClickListener(UserMapView.this::onMarkerClick);*/\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void goUserStatistics() {\r\n        final Intent intent = new Intent(this, UserStatistics.class);\r\n        User user = new User();\r\n        intent.putExtra(\"UID\", UID);\r\n        intent.putExtra(\"city\",city);\r\n        intent.putExtra(\"latitude\",latitude);\r\n        intent.putExtra(\"longitude\",longitude);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void goHome() {\r\n        final Intent intent = new Intent(this, UserView.class);\r\n        User user = new User();\r\n        intent.putExtra(\"UID\", UID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.menu_action_bar, menu);\r\n        return true;\r\n    }\r\n\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    public void OnItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.action_exit:\r\n                break;\r\n            case R.id.action_settings:\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        progressBar.setVisibility(View.GONE);\r\n        mMap = googleMap;\r\n        Iterator<LatLng> iterator = latLngs.listIterator();\r\n        while(iterator.hasNext()){\r\n            mMap.addMarker(new MarkerOptions().position(iterator.next()));\r\n        }\r\n        LatLng myPlace = new LatLng(latitude, longitude);\r\n        //mMap.addMarker(new MarkerOptions().position(italy).title(\"I'm here\"));\r\n        // mMap.moveCamera(CameraUpdateFactory.newLatLng(italy));\r\n        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(myPlace, 10));\r\n        mMap.setOnMarkerClickListener(this);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onMarkerClick(Marker marker) {\r\n        LatLng position= marker.getPosition();\r\n        double latitude= position.latitude;\r\n        double longitude= position.longitude;\r\n        FragmentUserMapBackDrop fragment=new FragmentUserMapBackDrop();\r\n        Bundle bundle=new Bundle();\r\n        String businessUID=calculateMyBusinessCustomUID(latitude,longitude);\r\n        bundle.putString(\"businessUID\",businessUID);\r\n        bundle.putString(\"UID\",UID);\r\n        fragment.setArguments(bundle);\r\n        getSupportFragmentManager().beginTransaction()\r\n                .add(R.id.coordinator, fragment).commit();\r\n        return false;\r\n    }\r\n    private String calculateMyBusinessCustomUID(Double latitude,Double longitude){\r\n        if(latitude!=null && longitude!=null){\r\n            String customUID=null;\r\n            customUID= String.valueOf(latitude+longitude);\r\n            customUID =customUID.replaceAll(\"[^0-9]\", \"\");\r\n            return customUID;\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n    //killa il service se attivo\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        killServiceIfRunning();\r\n    }\r\n    private boolean isMyServiceRunning(Class<?> serviceClass) {\r\n        ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);\r\n        for (ActivityManager.RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {\r\n            if (serviceClass.getName().equals(service.service.getClassName())) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    private void killServiceIfRunning(){\r\n        if(isMyServiceRunning(StepCounter.class) == true){\r\n            Intent intent =new Intent(this,StepCounter.class);\r\n            Toast.makeText(this,\"Contapassi disattivato\",Toast.LENGTH_SHORT).show();\r\n            stopService(intent);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/walktoshop/User/UserMapView.java	(revision c3b1d13e90b0f4cf751823be3685a9fe4e5437c0)
+++ app/src/main/java/com/example/walktoshop/User/UserMapView.java	(date 1611927738500)
@@ -1,38 +1,23 @@
 package com.example.walktoshop.User;
 
-import android.Manifest;
 import android.app.ActivityManager;
-import android.app.AlertDialog;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.content.res.Configuration;
-import android.location.Address;
-import android.location.Geocoder;
-import android.location.Location;
 import android.location.LocationListener;
 import android.location.LocationManager;
-import android.os.Build;
 import android.os.Bundle;
-import android.provider.Settings;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
-import android.widget.ListView;
 import android.widget.ProgressBar;
 import android.widget.Toast;
-
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
-import androidx.core.app.ActivityCompat;
-
 import com.example.walktoshop.NetworkController.NetworkController;
 import com.example.walktoshop.R;
 import com.google.android.gms.location.FusedLocationProviderClient;
-import com.google.android.gms.location.LocationServices;
 import com.google.android.gms.maps.CameraUpdateFactory;
 import com.google.android.gms.maps.GoogleMap;
 import com.google.android.gms.maps.OnMapReadyCallback;
@@ -41,20 +26,14 @@
 import com.google.android.gms.maps.model.Marker;
 import com.google.android.gms.maps.model.MarkerOptions;
 import com.google.android.gms.tasks.OnCompleteListener;
-import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
-import com.google.android.libraries.places.api.model.Place;
-import com.google.android.libraries.places.api.net.PlacesClient;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.google.firebase.firestore.QueryDocumentSnapshot;
 import com.google.firebase.firestore.QuerySnapshot;
-
-import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
-import java.util.Locale;
 
 
 public class UserMapView extends AppCompatActivity implements GoogleMap.OnMarkerClickListener,OnMapReadyCallback {
@@ -105,8 +84,6 @@
             });
         }
 
-
-
         BottomNavigationView bottomNavigationView = (BottomNavigationView) findViewById(R.id.bottom_navigation);
         bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {
             @Override
@@ -135,32 +112,6 @@
         }
     }
 
-    private void getBusinessLatLng(String city) {
-        Log.d("City1", city);
-        db.collection("attivita").whereEqualTo("locality", city).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-            @Override
-            public void onComplete(@NonNull Task<QuerySnapshot> task) {
-                if(task.isSuccessful()){
-                    for (QueryDocumentSnapshot document : task.getResult()){
-                        double lat = Double.parseDouble(document.getString("latitude"));
-                        double longt = Double.parseDouble(document.getString("longitude"));
-
-                    }
-                    /*
-                    //latLngs.add(new LatLng(lat, longt));
-                    LatLng latLng = new LatLng(lat,longt);
-                    Log.d("Location",location.getLatitude()+"+"+location.getLongitude());
-                    MarkerOptions options = new MarkerOptions().position(latLng);
-                    googleMap.addMarker(options);
-                    LatLng myPlace = new LatLng(location.getLatitude(), location.getLongitude());
-                    googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(myPlace, 12));
-                    googleMap.setOnMarkerClickListener(UserMapView.this::onMarkerClick);*/
-
-                }
-            }
-        });
-    }
-
     private void goUserStatistics() {
         final Intent intent = new Intent(this, UserStatistics.class);
         User user = new User();
@@ -209,7 +160,6 @@
         // mMap.moveCamera(CameraUpdateFactory.newLatLng(italy));
         mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(myPlace, 10));
         mMap.setOnMarkerClickListener(this);
-
     }
 
     @Override

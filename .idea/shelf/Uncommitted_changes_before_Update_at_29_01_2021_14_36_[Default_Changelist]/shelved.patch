Index: app/src/main/java/com/example/walktoshop/User/UserMapView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.walktoshop.User;\r\n\r\nimport android.Manifest;\r\nimport android.app.ActivityManager;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.Configuration;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ListView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport com.example.walktoshop.NetworkController.NetworkController;\r\nimport com.example.walktoshop.R;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.libraries.places.api.model.Place;\r\nimport com.google.android.libraries.places.api.net.PlacesClient;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\n\r\npublic class UserMapView extends AppCompatActivity implements OnMapReadyCallback, GoogleMap.OnMarkerClickListener {\r\n    GoogleMap mMap;\r\n    ProgressBar progressBar;\r\n    List<LatLng> latLngs = new ArrayList<LatLng>();\r\n    LocationManager service;\r\n    LocationListener locationListener;\r\n    double latitude;\r\n    double longitude;\r\n    String city;\r\n    String UID;\r\n    FirebaseFirestore db =FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_user_map_view);\r\n        progressBar = (ProgressBar) findViewById(R.id.userMapViewProgressBar);\r\n        progressBar.setProgress(View.VISIBLE);\r\n        Toast.makeText(UserMapView.this,\"Apertura mappa in corso\", Toast.LENGTH_LONG).show();\r\n        askGPSpermission();\r\n\r\n        Intent intent = getIntent();\r\n        UID = intent.getStringExtra(\"UID\");\r\n\r\n        BottomNavigationView bottomNavigationView = (BottomNavigationView) findViewById(R.id.bottom_navigation);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                switch (item.getItemId()) {\r\n                    case R.id.action_home:\r\n                        goHome();\r\n                        break;\r\n                    case R.id.action_statistics:\r\n                        goUserStatistics();\r\n                        break;\r\n                    case R.id.action_notification:\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        NetworkController networkController =new NetworkController();\r\n        if(!networkController.isConnected(UserMapView.this)){\r\n            networkController.connectionDialog(UserMapView.this);\r\n        }\r\n    }\r\n\r\n    private void askGPSpermission() {\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                requestPermissions(new String[]{Manifest.permission.ACCESS_FINE_LOCATION,Manifest.permission.ACCESS_COARSE_LOCATION,Manifest.permission.INTERNET},10);\r\n            }\r\n            return;\r\n        }\r\n        getUserPosition();\r\n        service.requestLocationUpdates(\"gps\", 100, 1000, locationListener);\r\n    }\r\n\r\n    private void getUserPosition() {\r\n        service = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n        locationListener = new LocationListener() {\r\n            @Override\r\n            public void onLocationChanged(@NonNull Location location) {\r\n                latitude=location.getLatitude();\r\n                longitude=location.getLongitude();\r\n                Log.d(\"coordinates\",latitude+\"\\n\"+longitude);\r\n                try {\r\n                    Geocoder geocoder=new Geocoder(UserMapView.this);\r\n                    List<Address> addresses=new ArrayList<>();\r\n                    addresses=geocoder.getFromLocation(latitude,longitude,1);\r\n                    String country=addresses.get(0).getCountryName();\r\n                    city=addresses.get(0).getLocality();\r\n\r\n                    SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                            .findFragmentById(R.id.map);\r\n\r\n                    db.collection(\"attivita\").whereEqualTo(\"locality\",city).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                            if(task.isSuccessful()){\r\n                                for (QueryDocumentSnapshot document : task.getResult()){\r\n                                    double lat = Double.parseDouble(document.getString(\"latitude\"));\r\n                                    double longt = Double.parseDouble(document.getString(\"longitude\"));\r\n                                    latLngs.add(new LatLng(lat, longt));\r\n                                }\r\n                            }\r\n                            mapFragment.getMapAsync(UserMapView.this);\r\n                        }\r\n                    });\r\n                    //Log.d(\"city\",city);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onProviderEnabled(@NonNull String provider) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onProviderDisabled(@NonNull String provider) {\r\n                new AlertDialog.Builder(UserMapView.this).setTitle(\"GPS dialog\").setMessage(\"Do you want to turn on gps?\")\r\n                        .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n                                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\r\n                                startActivity(intent);\r\n                            }\r\n                        }).setNegativeButton(\"Go Back\", null).show();\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n\r\n    private void goUserStatistics() {\r\n        final Intent intent = new Intent(this, UserStatistics.class);\r\n        User user = new User();\r\n        intent.putExtra(\"UID\", UID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void goHome() {\r\n        final Intent intent = new Intent(this, UserView.class);\r\n        User user = new User();\r\n        intent.putExtra(\"UID\", UID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.menu_action_bar, menu);\r\n        return true;\r\n    }\r\n\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    public void OnItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.action_exit:\r\n                break;\r\n            case R.id.action_settings:\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        progressBar.setVisibility(View.GONE);\r\n        mMap = googleMap;\r\n        Iterator<LatLng> iterator = latLngs.listIterator();\r\n        while(iterator.hasNext()){\r\n            mMap.addMarker(new MarkerOptions().position(iterator.next()));\r\n        }\r\n        LatLng myPlace = new LatLng(latitude, longitude);\r\n        //mMap.addMarker(new MarkerOptions().position(italy).title(\"I'm here\"));\r\n       // mMap.moveCamera(CameraUpdateFactory.newLatLng(italy));\r\n        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(myPlace, 10));\r\n        mMap.setOnMarkerClickListener(this);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onMarkerClick(Marker marker) {\r\n        LatLng position= marker.getPosition();\r\n        double latitude= position.latitude;\r\n        double longitude= position.longitude;\r\n        FragmentUserMapBackDrop fragment=new FragmentUserMapBackDrop();\r\n        Bundle bundle=new Bundle();\r\n        String businessUID=calculateMyBusinessCustomUID(latitude,longitude);\r\n        bundle.putString(\"businessUID\",businessUID);\r\n        bundle.putString(\"UID\",UID);\r\n        fragment.setArguments(bundle);\r\n        getSupportFragmentManager().beginTransaction()\r\n                .add(R.id.coordinator, fragment).commit();\r\n        return false;\r\n    }\r\n    private String calculateMyBusinessCustomUID(Double latitude,Double longitude){\r\n        if(latitude!=null && longitude!=null){\r\n            String customUID=null;\r\n            customUID= String.valueOf(latitude+longitude);\r\n            customUID =customUID.replaceAll(\"[^0-9]\", \"\");\r\n            return customUID;\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n    //killa il service se attivo\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        killServiceIfRunning();\r\n    }\r\n    private boolean isMyServiceRunning(Class<?> serviceClass) {\r\n        ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);\r\n        for (ActivityManager.RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {\r\n            if (serviceClass.getName().equals(service.service.getClassName())) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    private void killServiceIfRunning(){\r\n        if(isMyServiceRunning(StepCounter.class) == true){\r\n            Intent intent =new Intent(this,StepCounter.class);\r\n            Toast.makeText(this,\"Contapassi disattivato\",Toast.LENGTH_SHORT).show();\r\n            stopService(intent);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/walktoshop/User/UserMapView.java	(revision 699569f05612756815eafd09991819848016560d)
+++ app/src/main/java/com/example/walktoshop/User/UserMapView.java	(date 1611867709128)
@@ -217,7 +217,7 @@
         }
         LatLng myPlace = new LatLng(latitude, longitude);
         //mMap.addMarker(new MarkerOptions().position(italy).title("I'm here"));
-       // mMap.moveCamera(CameraUpdateFactory.newLatLng(italy));
+        // mMap.moveCamera(CameraUpdateFactory.newLatLng(italy));
         mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(myPlace, 10));
         mMap.setOnMarkerClickListener(this);
 
@@ -271,4 +271,24 @@
         }
     }
 
+    @Override
+    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+        switch(requestCode){
+            case 10:
+                if(grantResults.length>0 && grantResults[0]==PackageManager.PERMISSION_GRANTED){
+
+                }else if(grantResults[0]==PackageManager.PERMISSION_DENIED){
+                    if(ActivityCompat.shouldShowRequestPermissionRationale(UserMapView.this,Manifest.permission.ACCESS_FINE_LOCATION)){
+                        //dialog in cui spiego
+                        new AlertDialog.Builder(UserMapView.this)
+                                .setTitle("Permission")
+                                .setMessage("Denying permission you can't use geo-localization")
+                                .setNeutralButton("ok",null)
+                                .show();
+                    }
+                }
+                return;
+        }
+    }
 }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_11_39_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_11_39_[Default_Changelist]/shelved.patch	(revision 699569f05612756815eafd09991819848016560d)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_11_39_[Default_Changelist]/shelved.patch	(revision 699569f05612756815eafd09991819848016560d)
@@ -1,29 +0,0 @@
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.walktoshop\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Walktoshop\">\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"@string/google_maps_key\" />\r\n\r\n        <activity android:name=\".User.UserView\">\r\n\r\n        </activity>\r\n        <activity android:name=\".User.UserMapView\"></activity>\r\n        <activity android:name=\".Seller.SellerView\">\r\n\r\n        </activity>\r\n        <activity android:name=\".Seller.SellerMapView\">\r\n\r\n        </activity>\r\n        <activity android:name=\".Login_SignUp.SignUp\"\r\n            android:theme=\"@style/FullScreen\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".Login_SignUp.LogIn\"\r\n            android:theme=\"@style/FullScreen\">\r\n\r\n        </activity>\r\n        <activity android:name=\".Seller.ManageDiscount\">\r\n\r\n\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/AndroidManifest.xml	(revision 5dca608878edb4513ecebf6dc3fa9881be2ea131)
-+++ app/src/main/AndroidManifest.xml	(date 1611221455656)
-@@ -29,15 +29,15 @@
-         </activity>
-         <activity android:name=".Login_SignUp.SignUp"
-             android:theme="@style/FullScreen">
-+
-+        </activity>
-+        <activity android:name=".Login_SignUp.LogIn"
-+            android:theme="@style/FullScreen">
-             <intent-filter>
-                 <action android:name="android.intent.action.MAIN" />
- 
-                 <category android:name="android.intent.category.LAUNCHER" />
-             </intent-filter>
--        </activity>
--        <activity android:name=".Login_SignUp.LogIn"
--            android:theme="@style/FullScreen">
--
-         </activity>
-         <activity android:name=".Seller.ManageDiscount">
- 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_11_39__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_11_39__Default_Changelist_.xml	(revision 699569f05612756815eafd09991819848016560d)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_11_39__Default_Changelist_.xml	(revision 699569f05612756815eafd09991819848016560d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_21_01_2021_11_39_[Default_Changelist]" date="1611225584904" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_11_39_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21/01/2021 11:39 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_22_43_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_22_43_[Default_Changelist]/shelved.patch	(revision 699569f05612756815eafd09991819848016560d)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_22_43_[Default_Changelist]/shelved.patch	(revision 699569f05612756815eafd09991819848016560d)
@@ -1,127 +0,0 @@
-Index: app/src/main/java/com/example/walktoshop/Login_SignUp/SignUp.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.walktoshop.Login_SignUp;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.util.Patterns;\r\nimport android.view.Gravity;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.example.walktoshop.R;\r\nimport com.example.walktoshop.Seller.Seller;\r\nimport com.example.walktoshop.Seller.SellerView;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.regex.Pattern;\r\n\r\n\r\npublic class SignUp extends AppCompatActivity {\r\n\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    FirebaseAuth mAuth=FirebaseAuth.getInstance();\r\n    private EditText username;\r\n    private EditText password;\r\n    private EditText email;\r\n    private Switch switchButton;\r\n    private Button goNext;\r\n    private TextView already_registered;\r\n    String stringEmail=null;\r\n    String stringPassword=null;\r\n    String stringUsername=null;\r\n    Seller seller=new Seller();\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_signup);\r\n        username=(EditText)findViewById(R.id.username);\r\n        password=(EditText) findViewById(R.id.password);\r\n        email=(EditText) findViewById(R.id.email);\r\n        switchButton=(Switch)findViewById(R.id.switch1);\r\n        goNext=(Button)findViewById(R.id.nextButton);\r\n        already_registered = (TextView) findViewById(R.id.already_registered);\r\n        goNext.setVisibility(View.VISIBLE);\r\n        seller.setUID(mAuth.getUid());\r\n\r\n        already_registered.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                goUserLogInActivity();\r\n            }\r\n        });\r\n\r\n        goNext.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(checkUserInfo()){\r\n                    if(switchButton.isChecked()){\r\n                        //crea e carica il negoziante\r\n                        createSeller();\r\n                    }else{\r\n                        //lato utente\r\n                        username.setVisibility(View.INVISIBLE);\r\n                        password.setVisibility(View.INVISIBLE);\r\n                        email.setVisibility(View.INVISIBLE);\r\n                        startFragment();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void goSellerViewActivity(){\r\n        final Intent intent = new Intent(this, SellerView.class);\r\n        intent.putExtra(\"UID\", seller.getUID());\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void goUserLogInActivity(){\r\n        final Intent intent = new Intent(this, LogIn.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void startFragment()\r\n    {\r\n        Bundle bundle = new Bundle();\r\n        bundle.putString(\"email\", stringEmail.toString());\r\n        bundle.putString(\"password\", stringPassword.toString());\r\n        bundle.putString(\"username\", stringUsername.toString());\r\n        FragmentManager fm=getSupportFragmentManager();\r\n        Fragment_SignUp fragment_signup =new Fragment_SignUp();\r\n        //addaniamtion\r\n        fragment_signup.setArguments(bundle);\r\n        fm.beginTransaction().addToBackStack(null).replace(R.id.signUpLayout,fragment_signup).commit();\r\n        goNext.setVisibility(View.GONE);\r\n    }\r\n\r\n    private void createSeller() {\r\n        seller.setEmail(stringEmail);\r\n        seller.setPassword(stringPassword);\r\n        seller.setUsername(stringUsername);\r\n        mAuth.createUserWithEmailAndPassword(seller.getEmail(),seller.getPassword()).addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                if(task.isSuccessful()){\r\n                    uploadSeller();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void uploadSeller() {\r\n        String sellerUID=mAuth.getUid();\r\n        db.collection(\"venditore\").document(sellerUID).set(seller).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n            @Override\r\n            public void onSuccess(Void aVoid) {\r\n                Log.d(\"SUCCESSO\",\"successoo\");\r\n                goSellerViewActivity();\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Log.d(\"FALLIMENTO\",\"fallito\");\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private boolean checkUserInfo(){\r\n        stringEmail=this.email.getText().toString().trim();\r\n        stringPassword= this.password.getText().toString().trim();\r\n        stringUsername=this.username.getText().toString().trim();\r\n        Pattern PASSWORD_PATTERN\r\n                = Pattern.compile(\r\n                \"[a-zA-Z0-9\\\\!\\\\@\\\\#\\\\$]{8,24}\");\r\n\r\n        if(stringUsername.isEmpty()){\r\n            this.username.setError(getResources().getString(R.string.usernameEmpty));\r\n            this.username.requestFocus();\r\n            return false;\r\n        }else if(stringEmail.isEmpty()){\r\n            this.email.setError(getResources().getString(R.string.emailEmpty));\r\n            this.email.requestFocus();\r\n            return false;\r\n        }else if(!Patterns.EMAIL_ADDRESS.matcher(stringEmail).matches()){\r\n            this.email.setError(getResources().getString(R.string.InvalidEmail));\r\n            this.email.requestFocus();\r\n            return false;\r\n        } else if(stringPassword.isEmpty()){\r\n            this.password.setError(getResources().getString(R.string.passwordEmpty));\r\n            this.password.requestFocus();\r\n            return false;\r\n        }else if(stringPassword.length()<6 || stringPassword.length()>20 || !PASSWORD_PATTERN.matcher(stringPassword).matches()){\r\n            Toast toast = Toast.makeText(this,\"Inserire almeno: una lettera minuscola[a-z], un carattere speciale[!,@,#,$] e due numeri[0,9]\",Toast.LENGTH_LONG);\r\n            toast.setGravity(Gravity.CENTER, 0, 0);\r\n            toast.show();\r\n            this.password.setError(getResources().getString(R.string.InvalidPassword));\r\n            this.password.requestFocus();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/walktoshop/Login_SignUp/SignUp.java	(revision 0e112213dd6678e777c9df3cc290eb6ffde73251)
-+++ app/src/main/java/com/example/walktoshop/Login_SignUp/SignUp.java	(date 1611233293744)
-@@ -21,6 +21,7 @@
- import com.example.walktoshop.R;
- import com.example.walktoshop.Seller.Seller;
- import com.example.walktoshop.Seller.SellerView;
-+import com.google.android.gms.maps.model.LatLng;
- import com.google.android.gms.tasks.OnCompleteListener;
- import com.google.android.gms.tasks.OnFailureListener;
- import com.google.android.gms.tasks.OnSuccessListener;
-@@ -28,7 +29,10 @@
- import com.google.firebase.auth.AuthResult;
- import com.google.firebase.auth.FirebaseAuth;
- import com.google.firebase.firestore.FirebaseFirestore;
-+import com.google.firebase.firestore.QueryDocumentSnapshot;
-+import com.google.firebase.firestore.QuerySnapshot;
- 
-+import java.util.ArrayList;
- import java.util.regex.Pattern;
- 
- 
-@@ -167,7 +171,7 @@
-             this.password.requestFocus();
-             return false;
-         }else if(stringPassword.length()<6 || stringPassword.length()>20 || !PASSWORD_PATTERN.matcher(stringPassword).matches()){
--            Toast toast = Toast.makeText(this,"Inserire almeno: una lettera minuscola[a-z], un carattere speciale[!,@,#,$] e due numeri[0,9]",Toast.LENGTH_LONG);
-+            Toast toast = Toast.makeText(this," La password deve essere lunga almeno 8 e inserire almeno: una lettera minuscola[a-z], un carattere speciale[!,@,#,$] e due numeri[0,9].",Toast.LENGTH_LONG);
-             toast.setGravity(Gravity.CENTER, 0, 0);
-             toast.show();
-             this.password.setError(getResources().getString(R.string.InvalidPassword));
-@@ -176,5 +180,7 @@
-         }
-         return true;
-     }
-+
-+
- }
- 
-Index: app/src/main/java/com/example/walktoshop/Login_SignUp/LogIn.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.walktoshop.Login_SignUp;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.walktoshop.R;\r\nimport com.example.walktoshop.Seller.SellerView;\r\nimport com.example.walktoshop.User.UserView;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\n\r\npublic class LogIn extends AppCompatActivity {\r\n\r\n    private EditText emailLogIn;\r\n    private EditText passwordLogIn;\r\n    private Button buttonLogIn;\r\n    private TextView notRegistered;\r\n    private String email;\r\n    private String password;\r\n    private String Uid = null;\r\n\r\n    private FirebaseAuth mAuth;\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        emailLogIn = (EditText) findViewById(R.id.emailLogIn);\r\n        passwordLogIn = (EditText) findViewById(R.id.passwordLogIn);\r\n        buttonLogIn = (Button) findViewById(R.id.buttonlogIn);\r\n        notRegistered = (TextView) findViewById(R.id.not_registered);\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        notRegistered.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                goUserRegistrationActivity();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        // Check if user is signed in (non-null) and update UI accordingly.\r\n        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n        if(currentUser != null) {\r\n           Uid = mAuth.getUid();\r\n           Log.d(\"loggato\",Uid);\r\n           db.collection(\"venditore\").document(Uid).get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n               @Override\r\n               public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                   if(documentSnapshot.exists()) {\r\n                       goSellerViewActivity();\r\n                   }else{\r\n                       goUserViewActivity();\r\n                   }\r\n               }\r\n           });\r\n        }\r\n    }\r\n\r\n    //questo metodo effettua l'autenticazione dell'utente\r\n    public void login(View v){\r\n\r\n        this.email = this.emailLogIn.getText().toString().trim();\r\n        this.password = this.passwordLogIn.getText().toString().trim();\r\n\r\n        //qui viene effettuata l'autenticazione che se va a buon fine, controlla la tipologia di utente\r\n        //e lo manda alla home rispettiva\r\n        //altrimenti segnala degli errori rispetto ai campi\r\n        if(checkInfo()) {\r\n\r\n            mAuth.signInWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if (task.isSuccessful()) {\r\n                                Uid = mAuth.getCurrentUser().getUid();\r\n                                checkTypeUser();\r\n                            }\r\n                            else\r\n                            {\r\n                                emailLogIn.setError(getResources().getString(R.string.InvalidEmail));\r\n                                passwordLogIn.setError(getResources().getString(R.string.InvalidPassword));\r\n                            }\r\n                        }\r\n                    });\r\n\r\n        }\r\n    }\r\n\r\n    // questo metodo controlla che tipo di utente si sta loggando e quindi in che home indirizzarlo\r\n    public void  checkTypeUser()\r\n    {\r\n        db.collection(\"venditore\").document(Uid).get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n\r\n            //dopo aver confrontato l'uid dell'utente dell'utente loggato  con quello dei venditori\r\n            //controlliamo che il documento effettivamente esista e se esiste\r\n            //questo logga come venditore, andando alla home venditore\r\n            //altrimenti come utente, andando alla home utente\r\n            @Override\r\n            public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n                if(documentSnapshot.exists()) {\r\n                    goSellerViewActivity();\r\n                    finish();\r\n                }\r\n                else{\r\n                    goUserViewActivity();\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void goSellerViewActivity(){\r\n        final Intent intent = new Intent(this, SellerView.class);\r\n        intent.putExtra(\"UID\", Uid);\r\n        startActivity(intent);\r\n    }\r\n    private void goUserViewActivity() {\r\n        final Intent intent = new Intent(this, UserView.class);\r\n        intent.putExtra(\"UID\", Uid);\r\n        startActivity(intent);\r\n    }\r\n    private void goUserRegistrationActivity(){\r\n        final Intent intent = new Intent(this, SignUp.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private boolean checkInfo(){\r\n\r\n        if(email.isEmpty() ){\r\n            emailLogIn.setError(getResources().getString(R.string.emailEmpty));\r\n            this.emailLogIn.requestFocus();\r\n            return false;\r\n\r\n        }else if(!android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()){\r\n            emailLogIn.setError(getResources().getString(R.string.InvalidEmail));\r\n            this.emailLogIn.requestFocus();\r\n            return false;\r\n\r\n        }else if(password.isEmpty()){\r\n            passwordLogIn.setError(getResources().getString(R.string.passwordEmpty));\r\n            this.passwordLogIn.requestFocus();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/walktoshop/Login_SignUp/LogIn.java	(revision 0e112213dd6678e777c9df3cc290eb6ffde73251)
-+++ app/src/main/java/com/example/walktoshop/Login_SignUp/LogIn.java	(date 1611225691081)
-@@ -169,4 +169,5 @@
- 
-         return true;
-     }
-+
- }
-Index: app/src/main/res/values/strings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><resources>\r\n    <string name=\"app_name\">WalkToShop</string>\r\n    <string name=\"action_settings\">Impostazioni</string>\r\n    <string name=\"action_exit\">Esci</string>\r\n    <string name=\"search\">search</string>\r\n    <string name=\"content_description_search\">contenuto</string>\r\n    <string name=\"action_home\">home</string>\r\n    <string name=\"action_map\">mappa</string>\r\n    <string name=\"action_statistics\">statistiche</string>\r\n    <string name=\"action_discount\">miei sconti</string>\r\n    <string name=\"action_notification\">notifiche</string>\r\n    <string name=\"action_search\">cerca</string>\r\n    <string name=\"snackbar_message\">Caricamento schermata di inserimento sconto</string>\r\n    <string name=\"snackbar_action\">CLOSE</string>\r\n    <string name=\"email\">Email</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"emailEmpty\">Inserire email</string>\r\n    <string name=\"passwordEmpty\">Inserire password</string>\r\n    <string name=\"usernameEmpty\">Inserire username</string>\r\n    <string name=\"InvalidPassword\">Password non valida</string>\r\n    <string name=\"InvalidEmail\">Email non valida</string>\r\n    <string name=\"InvalidUsername\">Password non valida</string>\r\n    <string name=\"weight\">Peso</string>\r\n    <string name=\"height\">Altezza</string>\r\n    <string name=\"InvalidWeight\">formato peso errato</string>\r\n    <string name=\"InvalidHeight\">formato altezza errato</string>\r\n    <string name=\"title_activity_seller_maps_view\">Map</string>\r\n    //framgent_manageDiscount\r\n    <string name=\"disocuntsQuantity\">Quantità</string>\r\n    <string name=\"percentage\">Percentuale</string>\r\n    <string name=\"description\">Descrizione</string>\r\n    <string name=\"expiringDate\">Data di scadenza</string>\r\n    <string name=\"add\">Aggiungi</string>\r\n    //dialog\r\n    <string name=\"yes\">Si</string>\r\n    <string name=\"no\">No</string>\r\n    <string name=\"ok\">Ok</string>\r\n    <string name=\"businessNotFound\">Ci spiace!Località non trovata.Riprovare</string>\r\n    <string name=\"emptyBusiness\">Non possiedi attività.Vuoi registrarne una?</string>\r\n</resources>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/values/strings.xml	(revision 0e112213dd6678e777c9df3cc290eb6ffde73251)
-+++ app/src/main/res/values/strings.xml	(date 1611226642807)
-@@ -20,6 +20,8 @@
-     <string name="InvalidPassword">Password non valida</string>
-     <string name="InvalidEmail">Email non valida</string>
-     <string name="InvalidUsername">Password non valida</string>
-+    <string name="emailExists">Email già esistente</string>
-+    <string name="usernameExists">Username già esistente</string>
-     <string name="weight">Peso</string>
-     <string name="height">Altezza</string>
-     <string name="InvalidWeight">formato peso errato</string>
-Index: app/src/main/java/com/example/walktoshop/User/UserMapView.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.walktoshop.User;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.widget.ProgressBar;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport com.example.walktoshop.R;\r\nimport com.github.mikephil.charting.charts.BarChart;\r\nimport com.github.mikephil.charting.charts.PieChart;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\nimport java.util.List;\r\n\r\n\r\npublic class UserMapView extends AppCompatActivity implements OnMapReadyCallback, GoogleMap.OnMarkerClickListener {\r\n    GoogleMap mMap;\r\n    ProgressBar progressBar;\r\n    List<LatLng> latLngs = new ArrayList<LatLng>();\r\n    double latitude;\r\n    double longitude;\r\n    String city;\r\n    String UID;\r\n    FirebaseFirestore db =FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_user_map_view);\r\n        Intent intent = getIntent();\r\n        latitude = intent.getDoubleExtra(\"latitude\", 0.0f);\r\n        longitude = intent.getDoubleExtra(\"longitude\", 0.0f);\r\n        city = intent.getStringExtra(\"city\");\r\n        UID = intent.getStringExtra(\"UID\");\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                .findFragmentById(R.id.map);\r\n\r\n        db.collection(\"attivita\").whereEqualTo(\"locality\", city).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    for (QueryDocumentSnapshot document : task.getResult()){\r\n                        double lat = Double.parseDouble(document.getString(\"latitude\"));\r\n                        double longt = Double.parseDouble(document.getString(\"longitude\"));\r\n                        latLngs.add(new LatLng(lat, longt));\r\n                    }\r\n                }\r\n                mapFragment.getMapAsync(UserMapView.this);\r\n            }\r\n        });\r\n\r\n        BottomNavigationView bottomNavigationView = (BottomNavigationView) findViewById(R.id.bottom_navigation);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                switch (item.getItemId()) {\r\n                    case R.id.action_home:\r\n                        goHome();\r\n                        break;\r\n                    case R.id.action_statistics:\r\n                        break;\r\n                    case R.id.action_notification:\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    public void goHome() {\r\n        final Intent intent = new Intent(this, UserView.class);\r\n        User user = new User();\r\n        intent.putExtra(\"UID\", UID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.menu_action_bar, menu);\r\n        return true;\r\n    }\r\n\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    public void OnItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.action_search:\r\n                break;\r\n            case R.id.action_exit:\r\n                break;\r\n            case R.id.action_settings:\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        mMap = googleMap;\r\n        Iterator<LatLng> iterator = latLngs.listIterator();\r\n        while(iterator.hasNext()){\r\n            mMap.addMarker(new MarkerOptions().position(iterator.next()));\r\n        }\r\n        LatLng myPlace = new LatLng(latitude, longitude);\r\n        //mMap.addMarker(new MarkerOptions().position(italy).title(\"I'm here\"));\r\n       // mMap.moveCamera(CameraUpdateFactory.newLatLng(italy));\r\n        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(myPlace, 15));\r\n        mMap.setOnMarkerClickListener(this);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onMarkerClick(Marker marker) {\r\n        getSupportFragmentManager().beginTransaction()\r\n                .add(R.id.container, new FragmentUserMapBackDrop()).commit();\r\n        return false;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/walktoshop/User/UserMapView.java	(revision 0e112213dd6678e777c9df3cc290eb6ffde73251)
-+++ app/src/main/java/com/example/walktoshop/User/UserMapView.java	(date 1611227647331)
-@@ -9,8 +9,6 @@
- import androidx.annotation.Nullable;
- import androidx.appcompat.app.AppCompatActivity;
- import com.example.walktoshop.R;
--import com.github.mikephil.charting.charts.BarChart;
--import com.github.mikephil.charting.charts.PieChart;
- import com.google.android.gms.maps.CameraUpdateFactory;
- import com.google.android.gms.maps.GoogleMap;
- import com.google.android.gms.maps.OnMapReadyCallback;
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.walktoshop\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Walktoshop\">\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"@string/google_maps_key\" />\r\n\r\n        <activity android:name=\".User.UserView\">\r\n\r\n        </activity>\r\n        <activity android:name=\".User.UserMapView\"></activity>\r\n        <activity android:name=\".Seller.SellerView\">\r\n\r\n        </activity>\r\n        <activity android:name=\".Seller.SellerMapView\">\r\n\r\n        </activity>\r\n        <activity android:name=\".Login_SignUp.SignUp\"\r\n            android:theme=\"@style/FullScreen\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".Login_SignUp.LogIn\"\r\n            android:theme=\"@style/FullScreen\">\r\n\r\n\r\n        </activity>\r\n\r\n        <activity android:name=\".Seller.ManageDiscount\">\r\n\r\n        </activity>\r\n\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/AndroidManifest.xml	(revision 0e112213dd6678e777c9df3cc290eb6ffde73251)
-+++ app/src/main/AndroidManifest.xml	(date 1611225608639)
-@@ -29,17 +29,16 @@
-         </activity>
-         <activity android:name=".Login_SignUp.SignUp"
-             android:theme="@style/FullScreen">
-+
-+        </activity>
-+        <activity android:name=".Login_SignUp.LogIn"
-+            android:theme="@style/FullScreen">
-             <intent-filter>
-                 <action android:name="android.intent.action.MAIN" />
- 
-                 <category android:name="android.intent.category.LAUNCHER" />
-             </intent-filter>
-         </activity>
--        <activity android:name=".Login_SignUp.LogIn"
--            android:theme="@style/FullScreen">
--
--
--        </activity>
- 
-         <activity android:name=".Seller.ManageDiscount">
- 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_22_43__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_22_43__Default_Changelist_.xml	(revision 699569f05612756815eafd09991819848016560d)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_22_43__Default_Changelist_.xml	(revision 699569f05612756815eafd09991819848016560d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_21_01_2021_22_43_[Default_Changelist]" date="1611265446753" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21_01_2021_22_43_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21/01/2021 22:43 [Default Changelist]" />
-</changelist>
\ No newline at end of file

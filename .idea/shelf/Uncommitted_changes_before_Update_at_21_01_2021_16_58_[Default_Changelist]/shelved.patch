Index: app/src/main/res/layout/activity_seller_map_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"horizontal\">\r\n\r\n    <fragment xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        xmlns:map=\"http://schemas.android.com/apk/res-auto\"\r\n        xmlns:tools=\"http://schemas.android.com/tools\"\r\n        android:id=\"@+id/map\"\r\n        android:name=\"com.google.android.gms.maps.SupportMapFragment\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        tools:context=\"com.example.walktoshop.Seller.SellerMapView\" />\r\n\r\n    <androidx.appcompat.widget.SearchView\r\n        android:id=\"@+id/search_bar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:queryHint=\"Search..\"\r\n        android:iconifiedByDefault=\"false\"\r\n        android:layout_margin=\"10dp\"\r\n        android:elevation=\"5dp\"\r\n        android:background=\"#FFFF\"\r\n        android:layout_marginBottom=\"683dp\" />\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_seller_map_view.xml	(revision 360101a76da5b27805b233d534be867b38077a8d)
+++ app/src/main/res/layout/activity_seller_map_view.xml	(date 1611238596511)
@@ -27,4 +27,5 @@
         android:background="#FFFF"
         android:layout_marginBottom="683dp" />
 
+
 </RelativeLayout>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.walktoshop\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Walktoshop\">\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"@string/google_maps_key\" />\r\n\r\n        <activity android:name=\".User.UserView\">\r\n\r\n        </activity>\r\n        <activity android:name=\".User.UserMapView\"></activity>\r\n        <activity android:name=\".Seller.SellerView\">\r\n\r\n        </activity>\r\n        <activity android:name=\".Seller.SellerMapView\">\r\n\r\n        </activity>\r\n        <activity android:name=\".Login_SignUp.SignUp\"\r\n            android:theme=\"@style/FullScreen\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".Login_SignUp.LogIn\"\r\n            android:theme=\"@style/FullScreen\">\r\n\r\n\r\n        </activity>\r\n\r\n        <activity android:name=\".Seller.ManageDiscount\">\r\n\r\n        </activity>\r\n\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 360101a76da5b27805b233d534be867b38077a8d)
+++ app/src/main/AndroidManifest.xml	(date 1611238747720)
@@ -5,6 +5,7 @@
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
     <uses-permission android:name="android.permission.INTERNET"/>
+
     <application
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
@@ -29,17 +30,16 @@
         </activity>
         <activity android:name=".Login_SignUp.SignUp"
             android:theme="@style/FullScreen">
+
+        </activity>
+        <activity android:name=".Login_SignUp.LogIn"
+            android:theme="@style/FullScreen">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
-        <activity android:name=".Login_SignUp.LogIn"
-            android:theme="@style/FullScreen">
-
-
-        </activity>
 
         <activity android:name=".Seller.ManageDiscount">
 
Index: app/src/main/java/com/example/walktoshop/User/UserMapView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.walktoshop.User;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.widget.ProgressBar;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport com.example.walktoshop.R;\r\nimport com.github.mikephil.charting.charts.BarChart;\r\nimport com.github.mikephil.charting.charts.PieChart;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\nimport java.util.List;\r\n\r\n\r\npublic class UserMapView extends AppCompatActivity implements OnMapReadyCallback, GoogleMap.OnMarkerClickListener {\r\n    GoogleMap mMap;\r\n    ProgressBar progressBar;\r\n    List<LatLng> latLngs = new ArrayList<LatLng>();\r\n    double latitude;\r\n    double longitude;\r\n    String city;\r\n    String UID;\r\n    FirebaseFirestore db =FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_user_map_view);\r\n        Intent intent = getIntent();\r\n        latitude = intent.getDoubleExtra(\"latitude\", 0.0f);\r\n        longitude = intent.getDoubleExtra(\"longitude\", 0.0f);\r\n        city = intent.getStringExtra(\"city\");\r\n        UID = intent.getStringExtra(\"UID\");\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                .findFragmentById(R.id.map);\r\n\r\n        db.collection(\"attivita\").whereEqualTo(\"locality\", city).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    for (QueryDocumentSnapshot document : task.getResult()){\r\n                        double lat = Double.parseDouble(document.getString(\"latitude\"));\r\n                        double longt = Double.parseDouble(document.getString(\"longitude\"));\r\n                        latLngs.add(new LatLng(lat, longt));\r\n                    }\r\n                }\r\n                mapFragment.getMapAsync(UserMapView.this);\r\n            }\r\n        });\r\n\r\n        BottomNavigationView bottomNavigationView = (BottomNavigationView) findViewById(R.id.bottom_navigation);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                switch (item.getItemId()) {\r\n                    case R.id.action_home:\r\n                        goHome();\r\n                        break;\r\n                    case R.id.action_statistics:\r\n                        break;\r\n                    case R.id.action_notification:\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    public void goHome() {\r\n        final Intent intent = new Intent(this, UserView.class);\r\n        User user = new User();\r\n        intent.putExtra(\"UID\", UID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.menu_action_bar, menu);\r\n        return true;\r\n    }\r\n\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    public void OnItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.action_search:\r\n                break;\r\n            case R.id.action_exit:\r\n                break;\r\n            case R.id.action_settings:\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        mMap = googleMap;\r\n        Iterator<LatLng> iterator = latLngs.listIterator();\r\n        while(iterator.hasNext()){\r\n            mMap.addMarker(new MarkerOptions().position(iterator.next()));\r\n        }\r\n        LatLng myPlace = new LatLng(latitude, longitude);\r\n        //mMap.addMarker(new MarkerOptions().position(italy).title(\"I'm here\"));\r\n       // mMap.moveCamera(CameraUpdateFactory.newLatLng(italy));\r\n        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(myPlace, 15));\r\n        mMap.setOnMarkerClickListener(this);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onMarkerClick(Marker marker) {\r\n        getSupportFragmentManager().beginTransaction()\r\n                .add(R.id.container, new FragmentUserMapBackDrop()).commit();\r\n        return false;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/walktoshop/User/UserMapView.java	(revision 360101a76da5b27805b233d534be867b38077a8d)
+++ app/src/main/java/com/example/walktoshop/User/UserMapView.java	(date 1611221630196)
@@ -1,7 +1,10 @@
 package com.example.walktoshop.User;
 
 import android.content.Intent;
+import android.location.Address;
+import android.location.Geocoder;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.widget.ProgressBar;
@@ -20,10 +23,14 @@
 import com.google.android.gms.maps.model.MarkerOptions;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
+import com.google.android.libraries.places.api.model.Place;
+import com.google.android.libraries.places.api.net.PlacesClient;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.google.firebase.firestore.QueryDocumentSnapshot;
 import com.google.firebase.firestore.QuerySnapshot;
+
+import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
@@ -83,7 +90,7 @@
         });
     }
 
-    public void goHome() {
+    private void goHome() {
         final Intent intent = new Intent(this, UserView.class);
         User user = new User();
         intent.putExtra("UID", UID);
Index: app/src/main/java/com/example/walktoshop/Seller/ManageDiscount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.walktoshop.Seller;\r\n\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.util.Pair;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.example.walktoshop.R;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.datepicker.MaterialDatePicker;\r\nimport com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\n\r\npublic class ManageDiscount extends AppCompatActivity {\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private String businessUID=null;\r\n    private EditText percentage;\r\n    private EditText description;\r\n    private EditText quantity;\r\n    private TextView expiringDate;\r\n    private Button add;\r\n    private Button addDate;\r\n    int date;\r\n    long timeInMillis;\r\n    String stringedPercentage;\r\n    String stringedDescription;\r\n    String stringedExpiringDate;\r\n    String stringedQuantity;\r\n    //DatePickerDialog.OnDateSetListener listener;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_managediscount);\r\n        Intent intent=getIntent();\r\n        if(intent.hasExtra(\"businessUID\")){\r\n            this.businessUID=intent.getStringExtra(\"businessUID\");\r\n        }\r\n        //inizializzazione variabli\r\n        addDate=(Button)findViewById(R.id.addDate);\r\n        expiringDate=(TextView) findViewById(R.id.expiringDate);\r\n        description=(EditText)findViewById(R.id.description);\r\n        percentage=(EditText)findViewById(R.id.percentage);\r\n        quantity=(EditText)findViewById(R.id.disocuntsQuantity);\r\n        add=(Button)findViewById(R.id.add);\r\n        //setting date picker\r\n        addDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //metodo set datepicker\r\n                final Calendar cal=Calendar.getInstance();\r\n                date=cal.get(Calendar.DATE);\r\n                int month=cal.get(Calendar.MONTH);\r\n                Log.d(\"month\", String.valueOf(month));\r\n                int year=cal.get(Calendar.YEAR);\r\n                if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {\r\n                    DatePickerDialog datePickerDialog=new DatePickerDialog(ManageDiscount.this, android.R.style.Theme_DeviceDefault_Dialog, new DatePickerDialog.OnDateSetListener() {\r\n                        @Override\r\n                        public void onDateSet(DatePicker datePicker, int year, int month, int date) {\r\n                            String months[]={\"Gen\",\"Feb\",\"Mar\",\"Apr\",\"Mag\",\"Giu\",\"Lug\",\"Ago\",\"Set\",\"Ott\",\"Nov\",\"Dic\"};\r\n                            String dateFormat=date+\"-\"+months[month]+\"-\"+year;\r\n                            Log.d(\"data\",dateFormat);\r\n                            expiringDate.setText(dateFormat);\r\n                            ManageDiscount.this.timeInMillis = cal.getTimeInMillis();\r\n                        }\r\n                    },year,month,date);\r\n                    datePickerDialog.show();\r\n                }else{\r\n                    //altro modo per prendere la data\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        add.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(checkInfo()){\r\n                    Discount discount= new Discount();\r\n                    String customDiscountUID=calculateMyCustomDiscountUID(businessUID,timeInMillis);\r\n                    discount.setUID(customDiscountUID);\r\n                    discount.setBusinessUID(businessUID);\r\n                    discount.setExpiringDate(String.valueOf(timeInMillis));\r\n                    discount.setState(\"\");\r\n                    discount.setDescription(stringedDescription);\r\n                    discount.setDiscountsQuantity(stringedQuantity);\r\n                    discount.setPercentage(stringedPercentage);\r\n                    addDiscount(customDiscountUID,discount);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void addDiscount(String customDiscountUID,Discount discount){\r\n        db.collection(\"sconti\").document(customDiscountUID).set(discount).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if(task.isSuccessful()){\r\n                    Log.d(\"customDiscountUID\",customDiscountUID);\r\n                    getBusiness(customDiscountUID);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void getBusiness(String customDiscountUID){\r\n        db.collection(\"attivita\").document(businessUID).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    DocumentSnapshot document=task.getResult();\r\n                    ArrayList<String> discountUID= (ArrayList<String>) document.get(\"discountUID\");\r\n                    if(discountUID == null){\r\n                        discountUID =new ArrayList<String>();\r\n                    }\r\n                    discountUID.add(customDiscountUID);\r\n                    updateBusiness(discountUID);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void updateBusiness(ArrayList<String> discountUID){\r\n        db.collection(\"attivita\").document(businessUID).update(\"discountUID\",discountUID).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if(task.isSuccessful()){\r\n                    Log.d(\"caricamento\",\"caricamento effettuato correttamente\");\r\n                }else{\r\n                    Log.d(\"caricamento\",\"caricamento non effettuato correttamente\");\r\n                }\r\n            }\r\n        }).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    private boolean checkInfo(){\r\n        stringedDescription=this.description.getText().toString().trim();\r\n        stringedPercentage =this.percentage.getText().toString().trim();\r\n        stringedQuantity=this.quantity.getText().toString().trim();\r\n        if(!stringedPercentage.isEmpty()){\r\n            try {\r\n                int num = Integer.parseInt(stringedPercentage);\r\n                Log.i(\"\",num+\" is a number\");\r\n            } catch (NumberFormatException e) {\r\n                Log.i(\"\",stringedPercentage+\" is not a number\");\r\n                percentage.setError(\"Percentuale non valida \");\r\n                return false;\r\n            }\r\n        }else if(!stringedQuantity.isEmpty()){\r\n            try {\r\n                int num = Integer.parseInt(stringedPercentage);\r\n                Log.i(\"\",num+\" is a number\");\r\n            } catch (NumberFormatException e) {\r\n                Log.i(\"\",stringedPercentage+\" is not a number\");\r\n                percentage.setError(\"Percentuale non valida \");\r\n                return false;\r\n            }\r\n        }else if(!stringedDescription.isEmpty() && stringedDescription.length()<25){\r\n            description.setError(\"Nome non valido\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    private String calculateMyCustomDiscountUID(String businessUID,long timeInMillis){\r\n        String stringedTimeInMills= String.valueOf(timeInMillis);\r\n        if(businessUID!=null && stringedTimeInMills!=null){\r\n            String customUID=null;\r\n            customUID= businessUID+stringedTimeInMills;\r\n            return customUID;\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/walktoshop/Seller/ManageDiscount.java	(revision 360101a76da5b27805b233d534be867b38077a8d)
+++ app/src/main/java/com/example/walktoshop/Seller/ManageDiscount.java	(date 1611241750917)
@@ -9,6 +9,7 @@
 import android.util.Log;
 import android.util.Pair;
 import android.view.LayoutInflater;
+import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
@@ -25,6 +26,7 @@
 import androidx.fragment.app.FragmentManager;
 
 import com.example.walktoshop.R;
+import com.example.walktoshop.User.UserView;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.android.material.datepicker.MaterialDatePicker;
@@ -57,6 +59,8 @@
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_managediscount);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+        getSupportActionBar().setHomeButtonEnabled(true);
         Intent intent=getIntent();
         if(intent.hasExtra("businessUID")){
             this.businessUID=intent.getStringExtra("businessUID");
@@ -116,7 +120,16 @@
             }
         });
     }
-    private void addDiscount(String customDiscountUID,Discount discount){
+
+    @Override
+    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
+        if(item.getItemId() == android.R.id.home){
+            finish();
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    private void addDiscount(String customDiscountUID, Discount discount){
         db.collection("sconti").document(customDiscountUID).set(discount).addOnCompleteListener(new OnCompleteListener<Void>() {
             @Override
             public void onComplete(@NonNull Task<Void> task) {
Index: app/src/main/java/com/example/walktoshop/Seller/SellerMapView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.walktoshop.Seller;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.fragment.app.FragmentActivity;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport com.example.walktoshop.R;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.libraries.places.api.Places;\r\nimport com.google.android.libraries.places.api.net.PlacesClient;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class SellerMapView extends FragmentActivity implements OnMapReadyCallback, GoogleMap.OnMarkerClickListener {\r\n\r\n    FirebaseFirestore db=FirebaseFirestore.getInstance();\r\n    private GoogleMap mMap;\r\n    private String UID = null;\r\n    private static final String API_KEY = \"AIzaSyBrbjgwm3CB6qBhWaa3cMrRV3Ek9XW0cPc\";\r\n    SearchView search;\r\n    String location;\r\n    Business business=new Business();\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_seller_map_view);\r\n        Intent intent = getIntent();\r\n        if(intent.hasExtra(\"UID\")){\r\n            UID=intent.getStringExtra(\"UID\");\r\n            Log.d(\"uid\",UID);\r\n            SellerMapView.this.business.setOwnerUID(UID);\r\n        }\r\n        // Obtain the SupportMapFragment and get notified when the map is ready to be used.\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);\r\n        search = findViewById(R.id.search_bar);\r\n        if(!Places.isInitialized()){\r\n            Places.initialize(getApplicationContext(),API_KEY);\r\n        }\r\n        PlacesClient client=Places.createClient(this);\r\n        search.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String s) {\r\n                location=search.getQuery().toString();\r\n                List<Address> addresses=null;\r\n                if(location!=null || !location.trim().equals(\"\")){\r\n                    Geocoder geocoder=new Geocoder(SellerMapView.this);\r\n                    try{\r\n                        addresses=geocoder.getFromLocationName(location,1);\r\n                    }catch(Exception e){\r\n                        e.printStackTrace();\r\n                        dialog();\r\n                    }\r\n                    if (addresses!=null && !addresses.isEmpty()){\r\n                        Address addr=addresses.get(0);\r\n                        Log.d(\"place\",addr.getLatitude()+\"--\"+addr.getLongitude()+\"--\"+addr.getLocality());\r\n                        LatLng place=new LatLng(addr.getLatitude(),addr.getLongitude());\r\n                        mMap.addMarker(new MarkerOptions().position(place).title(location));\r\n                        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(place,10));\r\n                        //inizalizzazione oggetto da scrivere\r\n                        /*\r\n                            nome esatto della citta\r\n                            in setName inserire res[0] e provare\r\n                         */\r\n                        if(SellerMapView.this.location.contains(\",\")){\r\n                            String[] res = SellerMapView.this.location.split(\"[,]\", 0);\r\n                            SellerMapView.this.location = res[0];\r\n                        }\r\n                        SellerMapView.this.business.setName(SellerMapView.this.location);\r\n                        SellerMapView.this.business.setLongitude(String.valueOf(addr.getLongitude()));\r\n                        SellerMapView.this.business.setLatitude(String.valueOf(addr.getLatitude()));\r\n                        SellerMapView.this.business.setLocality(addr.getLocality());\r\n                        SellerMapView.this.business.setUID(calculateMyBusinessCustomUID(addr.getLatitude(),addr.getLongitude()));\r\n                        Log.d(\"customuid\",SellerMapView.this.business.getUID());\r\n                        setBusiness(SellerMapView.this.business);\r\n                    }\r\n\r\n                }\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String s) {\r\n                return false;\r\n            }\r\n        });\r\n        mapFragment.getMapAsync(this);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        mMap = googleMap;\r\n\r\n        // Add a marker in Sydney and move the camera\r\n        LatLng sydney = new LatLng(-34, 151);\r\n        mMap.addMarker(new MarkerOptions().position(sydney).title(\"Marker in Sydney\"));\r\n        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));\r\n        mMap.setOnMarkerClickListener(this);\r\n    }\r\n\r\n    @Override\r\n    public boolean onMarkerClick(Marker marker) {\r\n        Log.d(\"Info\",marker.getPosition().toString()+marker.getTitle().toString());\r\n        Toast.makeText(this,marker.getPosition().toString()+marker.getTitle().toString(), Toast.LENGTH_SHORT).show();\r\n        return false;\r\n    }\r\n    private void setBusiness(Business business){\r\n\r\n        db.collection(\"attivita\").document(business.getUID()).set(this.business).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if(task.isSuccessful()){\r\n                    getSeller(business.getUID());\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void getSeller(String businessCustomUID){\r\n        db.collection(\"venditore\").document(UID).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful()){\r\n                    DocumentSnapshot document = task.getResult();\r\n                    ArrayList<String> businessUID = (ArrayList<String>) document.get(\"businessUID\");\r\n                    if(businessUID == null)\r\n                    {\r\n                        businessUID = new ArrayList<>();\r\n                    }\r\n                    businessUID.add(businessCustomUID);\r\n                    Log.d(\"op\",businessUID.toString());\r\n                    updateSeller(businessUID);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void updateSeller(ArrayList<String> businessUID){\r\n        db.collection(\"venditore\").document(UID).update(\"businessUID\",businessUID).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if(task.isSuccessful())\r\n                {\r\n                    Log.d(\"venditore\",\"successo\");\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void dialog(){\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        // Add the buttons\r\n        builder.setNeutralButton(R.string.ok, new DialogInterface.OnClickListener() {\r\n            public void onClick(DialogInterface dialog, int id) {\r\n\r\n            }\r\n        }).setMessage(R.string.businessNotFound);\r\n        // Set other d\r\n        builder.show();\r\n    }\r\n    private String calculateMyBusinessCustomUID(Double latitude,Double longitude){\r\n        if(latitude!=null && longitude!=null){\r\n            String customUID=null;\r\n            customUID= String.valueOf(latitude+longitude);\r\n            customUID =customUID.replaceAll(\"[^0-9]\", \"\");\r\n            return customUID;\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/walktoshop/Seller/SellerMapView.java	(revision 360101a76da5b27805b233d534be867b38077a8d)
+++ app/src/main/java/com/example/walktoshop/Seller/SellerMapView.java	(date 1611238837843)
@@ -3,6 +3,7 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.SearchView;
 import androidx.fragment.app.FragmentActivity;
+import androidx.recyclerview.widget.RecyclerView;
 
 import android.app.AlertDialog;
 import android.content.DialogInterface;
@@ -25,6 +26,8 @@
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.android.libraries.places.api.Places;
+import com.google.android.libraries.places.api.model.RectangularBounds;
+import com.google.android.libraries.places.api.net.FindAutocompletePredictionsRequest;
 import com.google.android.libraries.places.api.net.PlacesClient;
 import com.google.firebase.firestore.DocumentReference;
 import com.google.firebase.firestore.DocumentSnapshot;
@@ -33,7 +36,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class SellerMapView extends FragmentActivity implements OnMapReadyCallback, GoogleMap.OnMarkerClickListener {
+public class SellerMapView extends FragmentActivity implements OnMapReadyCallback, GoogleMap.OnMarkerClickListener  {
 
     FirebaseFirestore db=FirebaseFirestore.getInstance();
     private GoogleMap mMap;
@@ -42,6 +45,7 @@
     SearchView search;
     String location;
     Business business=new Business();
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -49,7 +53,7 @@
         Intent intent = getIntent();
         if(intent.hasExtra("UID")){
             UID=intent.getStringExtra("UID");
-            Log.d("uid",UID);
+//            Log.d("uid",UID);
             SellerMapView.this.business.setOwnerUID(UID);
         }
         // Obtain the SupportMapFragment and get notified when the map is ready to be used.
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.walktoshop\"\r\n        minSdkVersion 23\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    repositories {\r\n        maven { url 'https://jitpack.io' }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    def fragment_version = \"1.2.5\"\r\n    // Java language implementation\r\n    implementation \"androidx.fragment:fragment:$fragment_version\"\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.2'\r\n    implementation 'com.google.firebase:firebase-firestore:22.0.1'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.0'\r\n    implementation 'com.google.android.gms:play-services-location:17.1.0'\r\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\r\n    implementation 'com.google.android.libraries.places:places:2.4.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation \"androidx.swiperefreshlayout:swiperefreshlayout:1.1.0\"\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 360101a76da5b27805b233d534be867b38077a8d)
+++ app/build.gradle	(date 1611235719424)
@@ -33,6 +33,7 @@
 }
 
 dependencies {
+    implementation 'org.jetbrains:annotations:15.0'
     def fragment_version = "1.2.5"
     // Java language implementation
     implementation "androidx.fragment:fragment:$fragment_version"
@@ -42,6 +43,7 @@
     implementation 'com.google.firebase:firebase-firestore:22.0.1'
     implementation 'com.google.android.gms:play-services-maps:17.0.0'
     implementation 'com.google.android.gms:play-services-location:17.1.0'
+    implementation 'com.google.android.gms:play-services-places:17.0.0'
     implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
     implementation 'com.google.android.libraries.places:places:2.4.0'
     implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

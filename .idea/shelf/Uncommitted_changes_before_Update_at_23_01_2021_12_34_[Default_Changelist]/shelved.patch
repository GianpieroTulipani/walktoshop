Index: app/src/main/java/com/example/walktoshop/Seller/SellerViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.walktoshop.Seller;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.example.walktoshop.R;\r\nimport com.example.walktoshop.Seller.Business;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.lang.reflect.Field;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class SellerViewAdapter extends ArrayAdapter {\r\n    private Context context;\r\n    private ArrayList<Discount> discounts;\r\n    private String UID;\r\n    private ArrayList<String> businessUID;\r\n    private String usage;\r\n    FirebaseFirestore db =FirebaseFirestore.getInstance();\r\n    public SellerViewAdapter(Context context, ArrayList<Discount> discounts, String UID,ArrayList businessUID,String usage) {\r\n        super(context, R.layout.activity_sellerviewadapter);\r\n        this.context=context;\r\n        this.discounts=discounts;\r\n        this.UID = UID;\r\n        this.usage= usage;\r\n        this.businessUID = businessUID;\r\n    }\r\n    @Override\r\n    public int getCount() {\r\n        return discounts.size();\r\n    }\r\n    @Override\r\n    public Object getItem(int position) {\r\n        return discounts.get(position);\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(int position) {\r\n        return position;\r\n    }\r\n    @Override\r\n    public int getViewTypeCount() {\r\n        if(getCount() > 0){\r\n            return getCount();\r\n        }else{\r\n            return super.getViewTypeCount();\r\n        }\r\n    }\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return position;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\r\n        LayoutInflater layoutInflater=(LayoutInflater) context.getApplicationContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View activity = layoutInflater.inflate(R.layout.activity_sellerviewadapter,parent,false);\r\n        //caratteristiche card di sconto\r\n        TextView disocuntDescription= activity.findViewById(R.id.disocuntDescription);\r\n        TextView date=activity.findViewById(R.id.date);\r\n        //bottone eliminazione\r\n        Button deleteBusiness =activity.findViewById(R.id.deletebusiness);\r\n        //modifica\r\n        Button editBusiness= activity.findViewById(R.id.editBusiness);\r\n        //bottone attivazione contapassi\r\n\r\n        //bottone abilitazione\r\n        if(this.discounts.get(position) != null && position>=0 && !discounts.isEmpty()){\r\n            Discount d=this.discounts.get(position);\r\n            //settare tutti gli attributi xml\r\n\r\n            date.setText(\"Scadenza: \"+d.millisecondsToDate(d.getExpiringDate()));\r\n            disocuntDescription.setText(d.getDescription());\r\n            //description.setText(d.getDescription());\r\n            //myDescription.setText(\"vuota\");\r\n\r\n            //visibility\r\n            deleteBusiness.setVisibility(View.GONE);\r\n            editBusiness.setVisibility(View.GONE);\r\n            if(this.usage==\"sellerHome\"){\r\n                deleteBusiness.setVisibility(View.VISIBLE);\r\n                editBusiness.setVisibility(View.VISIBLE);\r\n                deleteBusiness.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Log.d(\"p\",discounts.get(position).getUID()+\" \");\r\n                        getBusiness(position);\r\n                    }\r\n                });\r\n            }else if(this.usage==\"userHome\"){\r\n                //qui si devono inserire elementi grafici tipici della vista in cui è chiamato\r\n            }else if(this.usage==\"backdropList\"){\r\n                //qui si devono inserire elementi grafici tipici della vista in cui è chiamato\r\n            }\r\n        }\r\n        return activity;\r\n    }\r\n\r\n    private void deleteDiscount(int position){\r\n        //getBusiness(position);\r\n        db.collection(\"sconti\").document(discounts.get(position).getUID())\r\n                .delete()\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(\"delete\", \"DocumentSnapshot successfully deleted!\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(\"delete\", \"Error deleting document\", e);\r\n                    }\r\n                }).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                SellerViewAdapter.this.discounts.remove(position);\r\n                SellerViewAdapter.this.notifyDataSetChanged();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getBusiness(int position)\r\n    {\r\n        db.collection(\"attivita\").document(businessUID.get(0)).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if(task.isSuccessful())\r\n                {   Log.d(\"position\",position+\" \");\r\n                    DocumentSnapshot document = task.getResult();\r\n                    ArrayList<String> discountUID = (ArrayList<String>) document.get(\"discountUID\");\r\n                    discountUID.remove(position);\r\n                    Log.d(\"disocuntUID\", discountUID.size()+\" \");\r\n                    updateBusiness(discountUID,position);\r\n                }else{\r\n                    Log.d(\"non successo\",\"non successo\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateBusiness(ArrayList<String> discountUID,int position)\r\n    {\r\n        db.collection(\"attivita\").document(businessUID.get(0)).update(\"discountUID\",discountUID).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if(task.isSuccessful())\r\n                {\r\n                    deleteDiscount(position);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/walktoshop/Seller/SellerViewAdapter.java	(revision 98e10d5a1ba43c69d7f0530ca67cc1960b81a9f9)
+++ app/src/main/java/com/example/walktoshop/Seller/SellerViewAdapter.java	(date 1611269100138)
@@ -49,6 +49,7 @@
         this.UID = UID;
         this.usage= usage;
         this.businessUID = businessUID;
+
     }
     @Override
     public int getCount() {
